{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/ericblois/Development/React Native/typescript-project/app/BusinessEditPages/BusinessEditInfoPage.tsx\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { styleValues, defaults, icons } from \"../HelperFiles/StyleSheet\";\nimport TextInputBox from \"../CustomComponents/TextInputBox\";\nimport IconButton from \"../CustomComponents/IconButton\";\nimport * as ImagePicker from 'expo-image-picker';\nimport ImageSlider from \"../CustomComponents/ImageSlider\";\n\nvar BusinessEditInfoPage = function (_Component) {\n  _inherits(BusinessEditInfoPage, _Component);\n\n  var _super = _createSuper(BusinessEditInfoPage);\n\n  function BusinessEditInfoPage(props) {\n    var _this;\n\n    _classCallCheck(this, BusinessEditInfoPage);\n\n    _this = _super.call(this, props);\n    _this.galleryImages = [];\n    return _this;\n  }\n\n  _createClass(BusinessEditInfoPage, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props$businessI, _this$props$businessI2;\n\n      return React.createElement(View, {\n        style: defaults.pageContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 7\n        }\n      }, React.createElement(ImageSlider, {\n        images: this.galleryImages,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }\n      }, React.createElement(IconButton, {\n        iconSource: icons.plus,\n        buttonStyle: styles.imageSelectButton,\n        iconStyle: {\n          tintColor: styleValues.whiteColor\n        },\n        buttonFunc: function _callee() {\n          var permissionResult, imageResult;\n          return _regeneratorRuntime.async(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  _context.next = 2;\n                  return _regeneratorRuntime.awrap(ImagePicker.getMediaLibraryPermissionsAsync().catch(function (e) {\n                    throw e;\n                  }));\n\n                case 2:\n                  permissionResult = _context.sent;\n\n                  if (!permissionResult.granted) {\n                    _context.next = 8;\n                    break;\n                  }\n\n                  _context.next = 6;\n                  return _regeneratorRuntime.awrap(ImagePicker.launchImageLibraryAsync({\n                    allowsEditing: false,\n                    allowsMultipleSelection: true,\n                    exif: false,\n                    mediaTypes: ImagePicker.MediaTypeOptions.Images,\n                    quality: 0.75\n                  }));\n\n                case 6:\n                  imageResult = _context.sent;\n\n                  if (!imageResult.cancelled) {\n                    console.log(imageResult.selected[0]);\n                  }\n\n                case 8:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, null, null, null, Promise);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }\n      })), React.createElement(TextInputBox, {\n        extraTextProps: {\n          defaultValue: (_this$props$businessI = this.props.businessInfo) == null ? void 0 : _this$props$businessI.name,\n          placeholder: \"Business Title\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }\n      }), React.createElement(TextInputBox, {\n        style: styles.descriptionBox,\n        textStyle: {\n          fontSize: styleValues.smallerTextSize\n        },\n        extraTextProps: {\n          defaultValue: (_this$props$businessI2 = this.props.businessInfo) == null ? void 0 : _this$props$businessI2.description,\n          placeholder: \"Description\",\n          multiline: true\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }\n      }));\n    }\n  }]);\n\n  return BusinessEditInfoPage;\n}(Component);\n\nexport { BusinessEditInfoPage as default };\nvar styles = StyleSheet.create({\n  descriptionBox: {\n    height: styleValues.winWidth * 0.5\n  },\n  imageSelectButton: {\n    width: styleValues.iconLargeSize,\n    height: styleValues.iconLargeSize,\n    position: \"absolute\",\n    margin: styleValues.mediumPadding,\n    bottom: 0,\n    left: 0\n  }\n});","map":{"version":3,"sources":["/Users/ericblois/Development/React Native/typescript-project/app/BusinessEditPages/BusinessEditInfoPage.tsx"],"names":["React","Component","styleValues","defaults","icons","TextInputBox","IconButton","ImagePicker","ImageSlider","BusinessEditInfoPage","props","galleryImages","pageContainer","plus","styles","imageSelectButton","tintColor","whiteColor","getMediaLibraryPermissionsAsync","catch","e","permissionResult","granted","launchImageLibraryAsync","allowsEditing","allowsMultipleSelection","exif","mediaTypes","MediaTypeOptions","Images","quality","imageResult","cancelled","console","log","selected","defaultValue","businessInfo","name","placeholder","descriptionBox","fontSize","smallerTextSize","description","multiline","StyleSheet","create","height","winWidth","width","iconLargeSize","position","margin","mediumPadding","bottom","left"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { View, Text, StyleSheet, } from \"react-native\";\nimport { styleValues, defaults, icons } from \"../HelperFiles/StyleSheet\";\nimport PropTypes from 'prop-types';\nimport TextButton from \"../CustomComponents/TextButton\";\nimport { auth } from \"../HelperFiles/Constants\";\nimport { StackNavigationProp } from '@react-navigation/stack';\nimport { RouteProp } from '@react-navigation/native';\nimport { BusinessMainStackParamList } from \"../HelperFiles/Navigation\"\nimport TextInputBox from \"../CustomComponents/TextInputBox\";\nimport { PublicBusinessData } from \"../HelperFiles/DataTypes\";\nimport IconButton from \"../CustomComponents/IconButton\";\nimport * as Permissions from 'expo-permissions';\nimport * as ImagePicker from 'expo-image-picker';\nimport ImageSlider from \"../CustomComponents/ImageSlider\";\n\ntype BusinessEditInfoNavigationProp = StackNavigationProp<BusinessMainStackParamList, \"businessEditInfo\">;\n\ntype BusinessEditInfoRouteProp = RouteProp<BusinessMainStackParamList, \"businessEditInfo\">;\n\ntype BusinessEditInfoProps = {\n    navigation: BusinessEditInfoNavigationProp,\n    route: BusinessEditInfoRouteProp,\n    businessInfo?: PublicBusinessData\n}\n\ntype State = {\n}\n\nexport default class BusinessEditInfoPage extends Component<BusinessEditInfoProps, State> {\n\n    galleryImages: number[] = []\n\n    constructor(props: BusinessEditInfoProps) {\n        super(props)\n\n    }\n\n  render() {\n    return (\n      <View style={defaults.pageContainer}>\n          <ImageSlider images={this.galleryImages}>\n            <IconButton\n                iconSource={icons.plus}\n                buttonStyle={styles.imageSelectButton}\n                iconStyle={{tintColor: styleValues.whiteColor}}\n                buttonFunc={async () => {\n                    let permissionResult = await ImagePicker.getMediaLibraryPermissionsAsync().catch((e) => {throw e})\n                    if (permissionResult.granted) {\n                        let imageResult = await ImagePicker.launchImageLibraryAsync({\n                            allowsEditing: false,\n                            allowsMultipleSelection: true,\n                            exif: false,\n                            mediaTypes: ImagePicker.MediaTypeOptions.Images,\n                            quality: 0.75,\n                        })\n                        if (!imageResult.cancelled) {\n                            console.log(imageResult.selected[0])\n                            // Add each selected image to the gallery\n                            /*for (const imageInfo of result.selected) {\n                                console.log(imageInfo)\n                                //const imageID = require(imageInfo.uri)\n                                //this.galleryImages.push(imageID)\n                            }*/\n                        }\n                    }\n                }}\n            />\n          </ImageSlider>\n          {/* Title */}\n          <TextInputBox\n            extraTextProps={{\n                defaultValue: this.props.businessInfo?.name,\n                placeholder: \"Business Title\"\n            }}\n          ></TextInputBox>\n          {/* Description */}\n          <TextInputBox\n            style={styles.descriptionBox}\n            textStyle={{fontSize: styleValues.smallerTextSize}}\n            extraTextProps={{\n                defaultValue: this.props.businessInfo?.description,\n                placeholder: \"Description\",\n                multiline: true\n            }}\n          ></TextInputBox>\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n    descriptionBox: {\n        height: styleValues.winWidth * 0.5\n    },\n    imageSelectButton: {\n        width: styleValues.iconLargeSize,\n        height: styleValues.iconLargeSize,\n        position: \"absolute\",\n        margin: styleValues.mediumPadding,\n        bottom: 0,\n        left: 0,\n    }\n})"]},"metadata":{},"sourceType":"module"}