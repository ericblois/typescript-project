{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/ericblois/Development/React Native/typescript-project/app/StartScreen.tsx\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport { styleValues, defaults, icons } from \"./HelperFiles/StyleSheet\";\nimport { TextButton, IconButton } from \"./HelperFiles/CompIndex\";\nimport { auth } from \"./HelperFiles/Constants\";\n\nvar StartScreen = function (_Component) {\n  _inherits(StartScreen, _Component);\n\n  var _super = _createSuper(StartScreen);\n\n  function StartScreen() {\n    var _this;\n\n    _classCallCheck(this, StartScreen);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      showLogin: false,\n      hideAll: false,\n      userText: \"\",\n      passText: \"\",\n      responseText: \"\"\n    };\n\n    _this.signinElements = function () {\n      if (_this.state.hideAll) {\n        return React.createElement(React.Fragment, null);\n      } else if (_this.state.showLogin) {\n        return React.createElement(KeyboardAvoidingView, {\n          style: styles.signinContainer,\n          behavior: \"position\",\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 17\n          }\n        }, React.createElement(TextInput, {\n          style: styles.signinElement,\n          onChangeText: function onChangeText(text) {\n            _this.setState({\n              userText: text\n            });\n          },\n          placeholder: \"Email\",\n          textAlign: \"center\",\n          autoCapitalize: \"none\",\n          autoCorrect: false,\n          textContentType: \"emailAddress\",\n          autoCompleteType: \"email\",\n          clearButtonMode: \"while-editing\",\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 29\n          }\n        }, _this.state.userText), React.createElement(TextInput, {\n          style: styles.signinElement,\n          onChangeText: function onChangeText(text) {\n            _this.setState({\n              passText: text\n            });\n          },\n          placeholder: \"Password\",\n          textAlign: \"center\",\n          autoCapitalize: \"none\",\n          autoCorrect: false,\n          textContentType: \"password\",\n          autoCompleteType: \"password\",\n          secureTextEntry: true,\n          clearButtonMode: \"while-editing\",\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 25\n          }\n        }, _this.state.passText), React.createElement(View, {\n          style: {\n            flexDirection: \"row\",\n            justifyContent: \"space-between\",\n            alignItems: \"center\"\n          },\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 25\n          }\n        }, React.createElement(IconButton, {\n          iconSource: icons.chevron,\n          iconStyle: {\n            tintColor: \"#fff\"\n          },\n          buttonStyle: {\n            marginBottom: styleValues.mediumPadding\n          },\n          buttonFunc: function buttonFunc() {\n            return _this.setState({\n              showLogin: false,\n              responseText: \"\"\n            });\n          },\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 29\n          }\n        }), React.createElement(Text, {\n          style: styles.responseText,\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 29\n          }\n        }, _this.state.responseText), React.createElement(IconButton, {\n          iconSource: icons.enter,\n          iconStyle: {\n            tintColor: \"#fff\"\n          },\n          buttonStyle: {\n            marginBottom: styleValues.mediumPadding\n          },\n          buttonFunc: function buttonFunc() {\n            return _this.attemptSignin();\n          },\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 29\n          }\n        })));\n      } else {\n        return React.createElement(View, {\n          style: styles.signinContainer,\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 17\n          }\n        }, React.createElement(TextButton, {\n          text: \"Login\",\n          buttonStyle: styles.signinElement,\n          textStyle: styles.buttonText,\n          buttonFunc: function buttonFunc() {\n            return _this.setState({\n              showLogin: true\n            });\n          },\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 21\n          }\n        }), React.createElement(TextButton, {\n          text: \"Sign Up\",\n          buttonStyle: styles.signinElement,\n          textStyle: styles.buttonText,\n          buttonFunc: function buttonFunc() {\n            return _this.props.navigation.navigate(\"userSignup\");\n          },\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 21\n          }\n        }), React.createElement(TextButton, {\n          text: \"Browse as Guest\",\n          buttonStyle: styles.signinElement,\n          textStyle: styles.buttonText,\n          buttonFunc: function buttonFunc() {\n            auth.signInAnonymously().then(function () {\n              _this.props.navigation.navigate(\"customerMain\");\n            }, function (e) {\n              console.error(e);\n            });\n          },\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 21\n          }\n        }));\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(StartScreen, [{\n    key: \"attemptSignin\",\n    value: function attemptSignin() {\n      var _this2 = this;\n\n      var user = this.state.userText;\n      var pass = this.state.passText;\n      this.setState({\n        hideAll: true\n      });\n      auth.signInWithEmailAndPassword(user, pass).then(function () {}, function (e) {\n        console.error(e);\n\n        _this2.setState({\n          hideAll: false,\n          responseText: \"Invalid email/password.\"\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        style: [defaults.screenContainer, {\n          backgroundColor: \"#ff7070\"\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 9\n        }\n      }, React.createElement(Image, {\n        style: styles.logo,\n        source: require(\"../assets/logoIcon.png\"),\n        resizeMethod: \"resize\",\n        resizeMode: \"contain\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 9\n        }\n      }), this.signinElements());\n    }\n  }]);\n\n  return StartScreen;\n}(Component);\n\nexport { StartScreen as default };\nvar styles = StyleSheet.create({\n  signinContainer: {\n    position: \"absolute\",\n    bottom: \"10%\",\n    left: styleValues.winWidth / 8\n  },\n  signinElement: {\n    width: styleValues.winWidth * 0.75,\n    height: styleValues.winWidth / 8,\n    backgroundColor: \"#fff\",\n    borderWidth: 2,\n    borderColor: \"#e34f4f\",\n    borderRadius: styleValues.mediumPadding,\n    marginBottom: styleValues.mediumPadding\n  },\n  buttonText: {\n    color: \"#ff7070\",\n    fontSize: styleValues.mediumTextSize\n  },\n  responseText: {\n    color: \"#fff\",\n    height: styleValues.iconMediumSize,\n    fontSize: styleValues.smallestTextSize,\n    textAlign: \"center\"\n  },\n  logo: {\n    position: \"absolute\",\n    top: \"20%\",\n    left: styleValues.winWidth * 3 / 8,\n    height: styleValues.winWidth / 4,\n    width: styleValues.winWidth / 4,\n    tintColor: \"#fff\"\n  },\n  background: {\n    height: \"100%\",\n    width: \"100%\"\n  }\n});","map":{"version":3,"sources":["/Users/ericblois/Development/React Native/typescript-project/app/StartScreen.tsx"],"names":["React","Component","styleValues","defaults","icons","TextButton","IconButton","auth","StartScreen","state","showLogin","hideAll","userText","passText","responseText","signinElements","styles","signinContainer","signinElement","text","setState","flexDirection","justifyContent","alignItems","chevron","tintColor","marginBottom","mediumPadding","enter","attemptSignin","buttonText","props","navigation","navigate","signInAnonymously","then","e","console","error","user","pass","signInWithEmailAndPassword","screenContainer","backgroundColor","logo","require","StyleSheet","create","position","bottom","left","winWidth","width","height","borderWidth","borderColor","borderRadius","color","fontSize","mediumTextSize","iconMediumSize","smallestTextSize","textAlign","top","background"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;;;;;AAEA,SAASC,WAAT,EAAsBC,QAAtB,EAAgCC,KAAhC;AACA,SAASC,UAAT,EAAqBC,UAArB;AAEA,SAASC,IAAT;;IAsBqBC,W;;;;;;;;;;;;;;;UAEjBC,K,GAAyB;AACrBC,MAAAA,SAAS,EAAE,KADU;AAErBC,MAAAA,OAAO,EAAE,KAFY;AAGrBC,MAAAA,QAAQ,EAAE,EAHW;AAIrBC,MAAAA,QAAQ,EAAE,EAJW;AAKrBC,MAAAA,YAAY,EAAE;AALO,K;;UAQzBC,c,GAAiB,YAAM;AACnB,UAAI,MAAKN,KAAL,CAAWE,OAAf,EAAwB;AACpB,eAAO,yCAAP;AACH,OAFD,MAEO,IAAI,MAAKF,KAAL,CAAWC,SAAf,EAA0B;AAC7B,eACI,oBAAC,oBAAD;AAAsB,UAAA,KAAK,EAAEM,MAAM,CAACC,eAApC;AAAqD,UAAA,QAAQ,EAAE,UAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACY,oBAAC,SAAD;AACI,UAAA,KAAK,EAAED,MAAM,CAACE,aADlB;AAEI,UAAA,YAAY,EAAE,sBAACC,IAAD,EAAU;AACpB,kBAAKC,QAAL,CAAc;AAACR,cAAAA,QAAQ,EAAEO;AAAX,aAAd;AACH,WAJL;AAKI,UAAA,WAAW,EAAE,OALjB;AAMI,UAAA,SAAS,EAAE,QANf;AAOI,UAAA,cAAc,EAAE,MAPpB;AAQI,UAAA,WAAW,EAAE,KARjB;AASI,UAAA,eAAe,EAAE,cATrB;AAUI,UAAA,gBAAgB,EAAE,OAVtB;AAWI,UAAA,eAAe,EAAE,eAXrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAaK,MAAKV,KAAL,CAAWG,QAbhB,CADZ,EAgBQ,oBAAC,SAAD;AACI,UAAA,KAAK,EAAEI,MAAM,CAACE,aADlB;AAEI,UAAA,YAAY,EAAE,sBAACC,IAAD,EAAU;AACpB,kBAAKC,QAAL,CAAc;AAACP,cAAAA,QAAQ,EAAEM;AAAX,aAAd;AACH,WAJL;AAKI,UAAA,WAAW,EAAE,UALjB;AAMI,UAAA,SAAS,EAAE,QANf;AAOI,UAAA,cAAc,EAAE,MAPpB;AAQI,UAAA,WAAW,EAAE,KARjB;AASI,UAAA,eAAe,EAAE,UATrB;AAUI,UAAA,gBAAgB,EAAE,UAVtB;AAWI,UAAA,eAAe,EAAE,IAXrB;AAYI,UAAA,eAAe,EAAE,eAZrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAcK,MAAKV,KAAL,CAAWI,QAdhB,CAhBR,EAgCQ,oBAAC,IAAD;AAAM,UAAA,KAAK,EAAE;AAACQ,YAAAA,aAAa,EAAE,KAAhB;AAAuBC,YAAAA,cAAc,EAAE,eAAvC;AAAwDC,YAAAA,UAAU,EAAE;AAApE,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,oBAAC,UAAD;AACI,UAAA,UAAU,EAAEnB,KAAK,CAACoB,OADtB;AAEI,UAAA,SAAS,EAAE;AAACC,YAAAA,SAAS,EAAE;AAAZ,WAFf;AAGI,UAAA,WAAW,EAAE;AAACC,YAAAA,YAAY,EAAExB,WAAW,CAACyB;AAA3B,WAHjB;AAII,UAAA,UAAU,EAAE;AAAA,mBAAM,MAAKP,QAAL,CAAc;AAACV,cAAAA,SAAS,EAAE,KAAZ;AAAmBI,cAAAA,YAAY,EAAE;AAAjC,aAAd,CAAN;AAAA,WAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ,EAOI,oBAAC,IAAD;AACI,UAAA,KAAK,EAAEE,MAAM,CAACF,YADlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAGK,MAAKL,KAAL,CAAWK,YAHhB,CAPJ,EAYI,oBAAC,UAAD;AACI,UAAA,UAAU,EAAEV,KAAK,CAACwB,KADtB;AAEI,UAAA,SAAS,EAAE;AAACH,YAAAA,SAAS,EAAE;AAAZ,WAFf;AAGI,UAAA,WAAW,EAAE;AAACC,YAAAA,YAAY,EAAExB,WAAW,CAACyB;AAA3B,WAHjB;AAII,UAAA,UAAU,EAAE;AAAA,mBAAM,MAAKE,aAAL,EAAN;AAAA,WAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAZJ,CAhCR,CADJ;AAuDH,OAxDM,MAwDA;AACH,eACI,oBAAC,IAAD;AAAM,UAAA,KAAK,EAAEb,MAAM,CAACC,eAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,oBAAC,UAAD;AACI,UAAA,IAAI,EAAE,OADV;AAEI,UAAA,WAAW,EAAED,MAAM,CAACE,aAFxB;AAGI,UAAA,SAAS,EAAEF,MAAM,CAACc,UAHtB;AAII,UAAA,UAAU,EAAE;AAAA,mBAAM,MAAKV,QAAL,CAAc;AAACV,cAAAA,SAAS,EAAE;AAAZ,aAAd,CAAN;AAAA,WAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ,EAOI,oBAAC,UAAD;AACI,UAAA,IAAI,EAAE,SADV;AAEI,UAAA,WAAW,EAAEM,MAAM,CAACE,aAFxB;AAGI,UAAA,SAAS,EAAEF,MAAM,CAACc,UAHtB;AAII,UAAA,UAAU,EAAE;AAAA,mBAAM,MAAKC,KAAL,CAAWC,UAAX,CAAsBC,QAAtB,CAA+B,YAA/B,CAAN;AAAA,WAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAPJ,EAaI,oBAAC,UAAD;AACI,UAAA,IAAI,EAAE,iBADV;AAEI,UAAA,WAAW,EAAEjB,MAAM,CAACE,aAFxB;AAGI,UAAA,SAAS,EAAEF,MAAM,CAACc,UAHtB;AAII,UAAA,UAAU,EAAE,sBAAM;AACdvB,YAAAA,IAAI,CAAC2B,iBAAL,GAAyBC,IAAzB,CAA8B,YAAM;AAChC,oBAAKJ,KAAL,CAAWC,UAAX,CAAsBC,QAAtB,CAA+B,cAA/B;AACH,aAFD,EAEG,UAACG,CAAD,EAAY;AACXC,cAAAA,OAAO,CAACC,KAAR,CAAcF,CAAd;AACH,aAJD;AAKH,WAVL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAbJ,CADJ;AA4BH;AACJ,K;;;;;;;oCAEe;AAAA;;AACZ,UAAMG,IAAI,GAAG,KAAK9B,KAAL,CAAWG,QAAxB;AACA,UAAM4B,IAAI,GAAG,KAAK/B,KAAL,CAAWI,QAAxB;AACA,WAAKO,QAAL,CAAc;AAACT,QAAAA,OAAO,EAAE;AAAV,OAAd;AACAJ,MAAAA,IAAI,CAACkC,0BAAL,CAAgCF,IAAhC,EAAsCC,IAAtC,EAA4CL,IAA5C,CAAiD,YAAM,CAAE,CAAzD,EACA,UAACC,CAAD,EAAY;AACRC,QAAAA,OAAO,CAACC,KAAR,CAAcF,CAAd;;AACA,QAAA,MAAI,CAAChB,QAAL,CAAc;AAACT,UAAAA,OAAO,EAAE,KAAV;AAAiBG,UAAAA,YAAY,EAAE;AAA/B,SAAd;AACH,OAJD;AAKH;;;6BAEM;AACP,aACI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE,CAACX,QAAQ,CAACuC,eAAV,EAA2B;AAACC,UAAAA,eAAe,EAAE;AAAlB,SAA3B,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,KAAD;AACI,QAAA,KAAK,EAAE3B,MAAM,CAAC4B,IADlB;AAEI,QAAA,MAAM,EAAEC,OAAO,0BAFnB;AAGI,QAAA,YAAY,EAAE,QAHlB;AAII,QAAA,UAAU,EAAE,SAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADA,EAOC,KAAK9B,cAAL,EAPD,CADJ;AAWD;;;;EA5HsCd,S;;SAApBO,W;AA+HrB,IAAMQ,MAAM,GAAG8B,UAAU,CAACC,MAAX,CAAkB;AAC7B9B,EAAAA,eAAe,EAAE;AACb+B,IAAAA,QAAQ,EAAE,UADG;AAEbC,IAAAA,MAAM,EAAE,KAFK;AAGbC,IAAAA,IAAI,EAAEhD,WAAW,CAACiD,QAAZ,GAAqB;AAHd,GADY;AAM7BjC,EAAAA,aAAa,EAAE;AACXkC,IAAAA,KAAK,EAAElD,WAAW,CAACiD,QAAZ,GAAqB,IADjB;AAEXE,IAAAA,MAAM,EAAEnD,WAAW,CAACiD,QAAZ,GAAqB,CAFlB;AAGXR,IAAAA,eAAe,EAAE,MAHN;AAIXW,IAAAA,WAAW,EAAE,CAJF;AAKXC,IAAAA,WAAW,EAAE,SALF;AAMXC,IAAAA,YAAY,EAAEtD,WAAW,CAACyB,aANf;AAOXD,IAAAA,YAAY,EAAExB,WAAW,CAACyB;AAPf,GANc;AAe7BG,EAAAA,UAAU,EAAE;AACR2B,IAAAA,KAAK,EAAE,SADC;AAERC,IAAAA,QAAQ,EAAExD,WAAW,CAACyD;AAFd,GAfiB;AAmB7B7C,EAAAA,YAAY,EAAE;AACV2C,IAAAA,KAAK,EAAE,MADG;AAEVJ,IAAAA,MAAM,EAAEnD,WAAW,CAAC0D,cAFV;AAGVF,IAAAA,QAAQ,EAAExD,WAAW,CAAC2D,gBAHZ;AAIVC,IAAAA,SAAS,EAAE;AAJD,GAnBe;AAyB7BlB,EAAAA,IAAI,EAAE;AACFI,IAAAA,QAAQ,EAAE,UADR;AAEFe,IAAAA,GAAG,EAAE,KAFH;AAGFb,IAAAA,IAAI,EAAEhD,WAAW,CAACiD,QAAZ,GAAqB,CAArB,GAAuB,CAH3B;AAIFE,IAAAA,MAAM,EAAEnD,WAAW,CAACiD,QAAZ,GAAqB,CAJ3B;AAKFC,IAAAA,KAAK,EAAElD,WAAW,CAACiD,QAAZ,GAAqB,CAL1B;AAMF1B,IAAAA,SAAS,EAAE;AANT,GAzBuB;AAiC7BuC,EAAAA,UAAU,EAAE;AACRX,IAAAA,MAAM,EAAE,MADA;AAERD,IAAAA,KAAK,EAAE;AAFC;AAjCiB,CAAlB,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { View, Text, Image, StyleSheet, TextInput, KeyboardAvoidingView, SafeAreaView } from \"react-native\";\nimport { styleValues, defaults, icons } from \"./HelperFiles/StyleSheet\";\nimport { TextButton, IconButton } from \"./HelperFiles/CompIndex\";\nimport PropTypes from 'prop-types';\nimport { auth } from \"./HelperFiles/Constants\";\nimport { StackNavigationProp } from '@react-navigation/stack';\nimport { RootStackParamList } from \"./HelperFiles/Navigation\";\nimport { RouteProp } from \"@react-navigation/core\";\n\ntype StartNavigationProp = StackNavigationProp<RootStackParamList, \"start\">;\n\ntype StartRouteProp = RouteProp<RootStackParamList, \"start\">;\n\ntype Props = {\n    navigation: StartNavigationProp,\n    route: StartRouteProp\n}\n\ntype State = {\n    showLogin: boolean,\n    hideAll: boolean,\n    userText: string,\n    passText: string,\n    responseText: string\n}\n\nexport default class StartScreen extends Component<Props, State> {\n\n    state: Readonly<State> = {\n        showLogin: false,\n        hideAll: false,\n        userText: \"\",\n        passText: \"\",\n        responseText: \"\"\n    }\n\n    signinElements = () => {\n        if (this.state.hideAll) {\n            return <></>;\n        } else if (this.state.showLogin) {\n            return (\n                <KeyboardAvoidingView style={styles.signinContainer} behavior={\"position\"}>\n                            <TextInput\n                                style={styles.signinElement}\n                                onChangeText={(text) => {\n                                    this.setState({userText: text})\n                                }}\n                                placeholder={\"Email\"}\n                                textAlign={\"center\"}\n                                autoCapitalize={\"none\"}\n                                autoCorrect={false}\n                                textContentType={\"emailAddress\"}\n                                autoCompleteType={\"email\"}\n                                clearButtonMode={\"while-editing\"}\n                            >\n                                {this.state.userText}\n                            </TextInput>\n                        <TextInput\n                            style={styles.signinElement}\n                            onChangeText={(text) => {\n                                this.setState({passText: text})\n                            }}\n                            placeholder={\"Password\"}\n                            textAlign={\"center\"}\n                            autoCapitalize={\"none\"}\n                            autoCorrect={false}\n                            textContentType={\"password\"}\n                            autoCompleteType={\"password\"}\n                            secureTextEntry={true}\n                            clearButtonMode={\"while-editing\"}\n                        >\n                            {this.state.passText}\n                        </TextInput>\n                        <View style={{flexDirection: \"row\", justifyContent: \"space-between\", alignItems: \"center\"}}>\n                            <IconButton\n                                iconSource={icons.chevron}\n                                iconStyle={{tintColor: \"#fff\"}}\n                                buttonStyle={{marginBottom: styleValues.mediumPadding}}\n                                buttonFunc={() => this.setState({showLogin: false, responseText: \"\"})}\n                            />\n                            <Text\n                                style={styles.responseText}\n                            >\n                                {this.state.responseText}\n                            </Text>\n                            <IconButton\n                                iconSource={icons.enter}\n                                iconStyle={{tintColor: \"#fff\"}}\n                                buttonStyle={{marginBottom: styleValues.mediumPadding}}\n                                buttonFunc={() => this.attemptSignin()}\n                            />\n                        </View>\n                </KeyboardAvoidingView>\n            )\n        // Buttons for different start options\n        } else {\n            return (\n                <View style={styles.signinContainer}>\n                    <TextButton\n                        text={\"Login\"}\n                        buttonStyle={styles.signinElement}\n                        textStyle={styles.buttonText}\n                        buttonFunc={() => this.setState({showLogin: true})}\n                    />\n                    <TextButton\n                        text={\"Sign Up\"}\n                        buttonStyle={styles.signinElement}\n                        textStyle={styles.buttonText}\n                        buttonFunc={() => this.props.navigation.navigate(\"userSignup\")}\n                    />\n                    <TextButton\n                        text={\"Browse as Guest\"}\n                        buttonStyle={styles.signinElement}\n                        textStyle={styles.buttonText}\n                        buttonFunc={() => {\n                            auth.signInAnonymously().then(() => {\n                                this.props.navigation.navigate(\"customerMain\")\n                            }, (e: any) => {\n                                console.error(e)\n                            })\n                        }}\n                    />\n                </View>\n            )\n        }       \n    }\n\n    attemptSignin() {\n        const user = this.state.userText;\n        const pass = this.state.passText;\n        this.setState({hideAll: true});\n        auth.signInWithEmailAndPassword(user, pass).then(() => {},\n        (e: any) => {\n            console.error(e);\n            this.setState({hideAll: false, responseText: \"Invalid email/password.\"});\n        })\n    }\n\n  render() {\n    return (\n        <View style={[defaults.screenContainer, {backgroundColor: \"#ff7070\"}]}>\n        <Image\n            style={styles.logo}\n            source={require(\"../assets/logoIcon.png\")}\n            resizeMethod={\"resize\"}\n            resizeMode={\"contain\"}\n        />\n        {this.signinElements()}\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n    signinContainer: {\n        position: \"absolute\",\n        bottom: \"10%\",\n        left: styleValues.winWidth/8\n    },\n    signinElement: {\n        width: styleValues.winWidth*0.75,\n        height: styleValues.winWidth/8,\n        backgroundColor: \"#fff\",\n        borderWidth: 2,\n        borderColor: \"#e34f4f\",\n        borderRadius: styleValues.mediumPadding,\n        marginBottom: styleValues.mediumPadding\n    },\n    buttonText: {\n        color: \"#ff7070\",\n        fontSize: styleValues.mediumTextSize\n    },\n    responseText: {\n        color: \"#fff\",\n        height: styleValues.iconMediumSize,\n        fontSize: styleValues.smallestTextSize,\n        textAlign: \"center\"\n    },\n    logo: {\n        position: \"absolute\",\n        top: \"20%\",\n        left: styleValues.winWidth*3/8,\n        height: styleValues.winWidth/4,\n        width: styleValues.winWidth/4,\n        tintColor: \"#fff\"\n    },\n    background: {\n        height: \"100%\",\n        width: \"100%\"\n    }\n})"]},"metadata":{},"sourceType":"module"}