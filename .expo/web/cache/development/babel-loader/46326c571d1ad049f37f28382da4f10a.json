{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/ericblois/Development/React Native/typescript-project/app/CustomComponents/PhotoSlider.tsx\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { styleValues } from \"../HelperFiles/StyleSheet\";\n\nvar PhotoSlider = function (_Component) {\n  _inherits(PhotoSlider, _Component);\n\n  var _super = _createSuper(PhotoSlider);\n\n  function PhotoSlider(props) {\n    var _this;\n\n    _classCallCheck(this, PhotoSlider);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      galleryWidth: styleValues.winWidth - styleValues.mediumPadding * 2,\n      galleryHeight: 0,\n      showGalleryIcon: true,\n      imagesLoaded: false,\n      imagesToLoad: _this.props.imgURLs.length,\n      images: new Array(_this.props.imgURLs.length)\n    };\n    return _this;\n  }\n\n  _createClass(PhotoSlider, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.loadImages();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {}\n  }, {\n    key: \"loadImages\",\n    value: function loadImages() {\n      var _this2 = this;\n\n      return _regeneratorRuntime.async(function loadImages$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              this.getGalleryHeight(function () {\n                _this2.props.imgURLs.forEach(function (value, index) {\n                  _this2.getFormattedWidth(value, function (imgWidth) {\n                    var width = index == 0 ? _this2.state.galleryWidth : imgWidth;\n                    var currentImages = _this2.state.images;\n                    currentImages[index] = React.createElement(Image, {\n                      source: {\n                        uri: value\n                      },\n                      resizeMethod: \"auto\",\n                      resizeMode: \"cover\",\n                      style: {\n                        height: _this2.state.galleryHeight,\n                        width: width,\n                        borderRadius: styleValues.mediumPadding\n                      },\n                      onLoadEnd: function onLoadEnd() {\n                        _this2.setState({\n                          imagesToLoad: _this2.state.imagesToLoad - 1\n                        });\n\n                        if (_this2.state.imagesToLoad <= 0) {\n                          _this2.setState({\n                            imagesLoaded: true\n                          });\n\n                          if (_this2.props.loadResponse) {\n                            _this2.props.loadResponse();\n                          }\n                        }\n                      },\n                      __self: _this2,\n                      __source: {\n                        fileName: _jsxFileName,\n                        lineNumber: 54,\n                        columnNumber: 21\n                      }\n                    });\n\n                    _this2.setState({\n                      images: currentImages\n                    });\n                  });\n                });\n              });\n\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"getGalleryHeight\",\n    value: function getGalleryHeight(callback) {\n      var _this3 = this;\n\n      Image.getSize(this.props.imgURLs[0], function (width, height) {\n        var ratio = width / height;\n        var galHeight = _this3.state.galleryWidth / ratio;\n\n        if (galHeight > styleValues.winHeight * 0.35) {\n          galHeight = styleValues.winHeight * 0.35;\n        }\n\n        _this3.setState({\n          galleryHeight: galHeight\n        }, callback);\n      }, function (e) {\n        console.error(e);\n      });\n    }\n  }, {\n    key: \"getFormattedWidth\",\n    value: function getFormattedWidth(url, callback) {\n      var _this4 = this;\n\n      Image.getSize(url, function (width, height) {\n        var imgWidth = _this4.state.galleryHeight * width / height;\n        callback(imgWidth);\n      }, function (e) {\n        console.error(e);\n      });\n    }\n  }, {\n    key: \"renderGalleryIcon\",\n    value: function renderGalleryIcon() {\n      if (this.state.showGalleryIcon) {\n        return React.createElement(Image, {\n          style: [styles.headerIcon, {}],\n          resizeMethod: \"scale\",\n          resizeMode: \"contain\",\n          source: require(\"../../assets/stackedSquares.png\"),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 17\n          }\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this5 = this;\n\n      return React.createElement(View, {\n        style: {\n          width: styleValues.winWidth,\n          height: this.state.galleryHeight\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 13\n        }\n      }, React.createElement(FlatList, {\n        style: styles.gallery,\n        data: this.state.images,\n        keyExtractor: function keyExtractor(item, index) {\n          return index.toString();\n        },\n        onScroll: function onScroll(event) {\n          _this5.setState({\n            showGalleryIcon: event.nativeEvent.contentOffset.x == 0\n          });\n        },\n        ListHeaderComponent: React.createElement(View, {\n          style: {\n            width: styleValues.mediumPadding\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 38\n          }\n        }),\n        ListFooterComponent: React.createElement(View, {\n          style: {\n            width: styleValues.mediumPadding\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 38\n          }\n        }),\n        ItemSeparatorComponent: function ItemSeparatorComponent() {\n          return React.createElement(View, {\n            style: {\n              width: styleValues.mediumPadding\n            },\n            __self: _this5,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 47\n            }\n          });\n        },\n        renderItem: function renderItem(_ref) {\n          var item = _ref.item;\n          return item;\n        },\n        horizontal: true,\n        extraData: this.state,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 17\n        }\n      }), this.renderGalleryIcon());\n    }\n  }]);\n\n  return PhotoSlider;\n}(Component);\n\nexport { PhotoSlider as default };\nvar styles = StyleSheet.create({\n  gallery: {},\n  headerIcon: {\n    position: \"absolute\",\n    right: 0,\n    bottom: 0,\n    marginRight: styleValues.mediumPadding * 2,\n    marginBottom: styleValues.mediumPadding,\n    width: styleValues.winWidth * 0.075,\n    height: styleValues.winWidth * 0.075,\n    opacity: 0.9\n  },\n  photo: {}\n});","map":{"version":3,"sources":["/Users/ericblois/Development/React Native/typescript-project/app/CustomComponents/PhotoSlider.tsx"],"names":["React","Component","styleValues","PhotoSlider","props","state","galleryWidth","winWidth","mediumPadding","galleryHeight","showGalleryIcon","imagesLoaded","imagesToLoad","imgURLs","length","images","Array","loadImages","getGalleryHeight","forEach","value","index","getFormattedWidth","imgWidth","width","currentImages","uri","height","borderRadius","setState","loadResponse","callback","Image","getSize","ratio","galHeight","winHeight","e","console","error","url","styles","headerIcon","require","gallery","item","toString","event","nativeEvent","contentOffset","x","renderGalleryIcon","StyleSheet","create","position","right","bottom","marginRight","marginBottom","opacity","photo"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { View, Image, StyleSheet, FlatList } from \"react-native\";\nimport { styleValues } from \"../HelperFiles/StyleSheet\";\nimport PropTypes from 'prop-types';\nimport { useNavigation } from \"@react-navigation/native\";\n\ntype Props = {\n    images: string[],\n    loadResponse?: () => void,\n}\n\ntype State = {\n    galleryWidth: number,\n    galleryHeight: number,\n    showGalleryIcon: boolean,\n    imagesLoaded: boolean,\n    imagesToLoad: number,\n    images: JSX.Element[]  \n}\n\nexport default class PhotoSlider extends Component<Props, State> {\n\n    constructor(props: Props) {\n        super(props);\n        this.state = {\n            galleryWidth: styleValues.winWidth - styleValues.mediumPadding*2,\n            galleryHeight: 0,\n            showGalleryIcon: true,\n            imagesLoaded: false,\n            imagesToLoad: this.props.imgURLs.length,\n            images: new Array(this.props.imgURLs.length)\n        }\n    }\n\n    componentDidMount() {\n        this.loadImages();\n    }\n\n    componentWillUnmount() {\n\n    }\n    // Create all of the Image components for this photo gallery\n    async loadImages() {\n        // Find the formatted gallery height\n        this.getGalleryHeight(() => {\n            // After gallery height is found, load each image\n            this.props.imgURLs.forEach((value, index) => {\n                // Get the formatted image width\n                this.getFormattedWidth(value, (imgWidth: number) => {\n                    // If this is the first image, set its width to that of the gallery\n                    const width = index == 0 ? this.state.galleryWidth : imgWidth;\n                    const currentImages = this.state.images;\n                    currentImages[index] = (\n                    <Image\n                        source={{uri: value}}\n                        resizeMethod={\"auto\"}\n                        resizeMode={\"cover\"}\n                        style={{height: this.state.galleryHeight, width: width, borderRadius: styleValues.mediumPadding,}}\n                        onLoadEnd={() => {\n                            this.setState({imagesToLoad: this.state.imagesToLoad - 1})\n                            if (this.state.imagesToLoad <= 0) {\n                                this.setState({imagesLoaded: true});\n                                if (this.props.loadResponse) {\n                                    this.props.loadResponse!();\n                                }\n                            }\n                        }}\n                    />);\n                    this.setState({images: currentImages});\n                })\n            })\n        })\n    }\n\n    // Format the gallery height to match the aspect ratio of the first gallery image (run callback on completion)\n    getGalleryHeight(callback: () => void) {\n        Image.getSize(\n            this.props.imgURLs[0],\n            (width, height) => {\n                const ratio = width / height;\n                let galHeight = this.state.galleryWidth / ratio;\n                //Check if this gallery will be taller than the maximum allowed gallery height\n                if (galHeight > styleValues.winHeight*0.35) {\n                    galHeight = styleValues.winHeight*0.35;\n                }\n                this.setState({galleryHeight: galHeight}, callback);\n            },\n            (e) => {\n                console.error(e);\n            }\n        )\n    }\n    // Get the formatted widths of each image to fit the screen size and gallery height\n    getFormattedWidth(url: string, callback: (imgWidth: number) => void) {\n        Image.getSize(\n            url,\n            (width, height) => {\n                const imgWidth = this.state.galleryHeight * width / height;\n                callback(imgWidth);\n            }, (e) => {\n                console.error(e);\n            }\n        )\n    }\n    // Render the gallery icon that shows when there are multiple images in the gallery\n    renderGalleryIcon() {\n        if (this.state.showGalleryIcon) {\n            return (\n                <Image \n                    style={[styles.headerIcon, {}]}\n                    resizeMethod={\"scale\"}\n                    resizeMode={\"contain\"}\n                    source={require(\"../../assets/stackedSquares.png\")}\n                />\n            )\n        }\n    }\n\n    render() {\n        return (\n            <View style={{width: styleValues.winWidth, height: this.state.galleryHeight}}>\n                <FlatList\n                style={styles.gallery}\n                data={this.state.images}\n                keyExtractor={(item, index) => index.toString()}\n                onScroll={(event) => {\n                    this.setState({showGalleryIcon: event.nativeEvent.contentOffset.x == 0});\n                }}\n                ListHeaderComponent={<View style={{width: styleValues.mediumPadding}}/>}\n                ListFooterComponent={<View style={{width: styleValues.mediumPadding}}/>}\n                ItemSeparatorComponent={() => <View style={{width: styleValues.mediumPadding}}/>}\n                renderItem={({ item }) => item}\n                horizontal={true}\n                extraData={this.state}\n                />\n                {this.renderGalleryIcon()}\n            </View>\n        );\n    }\n}\n\nconst styles = StyleSheet.create({\n    gallery: {\n    },\n    headerIcon: {\n        position: \"absolute\",\n        right: 0,\n        bottom: 0,\n        marginRight: styleValues.mediumPadding*2,\n        marginBottom: styleValues.mediumPadding,\n        width: styleValues.winWidth * 0.075,\n        height: styleValues.winWidth * 0.075,\n        opacity: 0.9\n    },\n    photo: {\n        \n    }\n});"]},"metadata":{},"sourceType":"module"}