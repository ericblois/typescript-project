{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/ericblois/Development/React Native/typescript-project/app/CustomComponents/TextDropdown.tsx\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport { styleValues, defaults } from \"../HelperFiles/StyleSheet\";\nimport DropDownPicker from 'react-native-dropdown-picker';\n\nvar TextDropdown = function (_Component) {\n  _inherits(TextDropdown, _Component);\n\n  var _super = _createSuper(TextDropdown);\n\n  function TextDropdown() {\n    _classCallCheck(this, TextDropdown);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(TextDropdown, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(DropDownPicker, _extends({\n        containerStyle: [defaults.dropdownContainer, this.props.style],\n        style: defaults.dropdown,\n        placeholderStyle: [defaults.dropdownText, {\n          color: styleValues.minorTextColor\n        }],\n        labelStyle: defaults.dropdownText,\n        searchableStyle: defaults.dropdownText,\n        activeLabelStyle: defaults.dropdownText,\n        selectedLabelStyle: defaults.dropdownText,\n        items: []\n      }, this.props.extraProps, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 13\n        }\n      }));\n    }\n  }]);\n\n  return TextDropdown;\n}(Component);\n\nexport { TextDropdown as default };","map":{"version":3,"sources":["/Users/ericblois/Development/React Native/typescript-project/app/CustomComponents/TextDropdown.tsx"],"names":["React","Component","styleValues","defaults","DropDownPicker","TextDropdown","dropdownContainer","props","style","dropdown","dropdownText","color","minorTextColor","extraProps"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAIA,SAASC,WAAT,EAAsBC,QAAtB;AAEA,OAAOC,cAAP,MAA2B,8BAA3B;;IASqBC,Y;;;;;;;;;;;;;6BAER;AACL,aACI,oBAAC,cAAD;AACI,QAAA,cAAc,EAAE,CAACF,QAAQ,CAACG,iBAAV,EAA6B,KAAKC,KAAL,CAAWC,KAAxC,CADpB;AAEI,QAAA,KAAK,EAAEL,QAAQ,CAACM,QAFpB;AAII,QAAA,gBAAgB,EAAE,CAACN,QAAQ,CAACO,YAAV,EAAwB;AAACC,UAAAA,KAAK,EAAET,WAAW,CAACU;AAApB,SAAxB,CAJtB;AAKI,QAAA,UAAU,EAAET,QAAQ,CAACO,YALzB;AAMI,QAAA,eAAe,EAAEP,QAAQ,CAACO,YAN9B;AAOI,QAAA,gBAAgB,EAAEP,QAAQ,CAACO,YAP/B;AAQI,QAAA,kBAAkB,EAAEP,QAAQ,CAACO,YARjC;AASI,QAAA,KAAK,EAAE;AATX,SAUQ,KAAKH,KAAL,CAAWM,UAVnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADJ;AAcH;;;;EAjBqCZ,S;;SAArBI,Y","sourcesContent":["import React, { Component } from \"react\";\nimport { TouchableOpacity, Text, StyleSheet, TextStyle, ViewStyle, View, GestureResponderEvent } from \"react-native\";\nimport PropTypes from 'prop-types';\nimport { NavigationProp, useNavigation } from \"@react-navigation/native\"\nimport { styleValues, defaults } from \"../HelperFiles/StyleSheet\";\nimport { TextInput } from \"react-native-gesture-handler\";\nimport DropDownPicker from 'react-native-dropdown-picker';\n\ntype TextDropdownProps = {\n    style?: ViewStyle,\n    extraProps?: (typeof DropDownPicker)['defaultProps'],\n}\n\ntype State = {}\n\nexport default class TextDropdown extends Component<TextDropdownProps, State> {\n\n    render() {\n        return (\n            <DropDownPicker\n                containerStyle={[defaults.dropdownContainer, this.props.style]}\n                style={defaults.dropdown}\n                // Text Styles\n                placeholderStyle={[defaults.dropdownText, {color: styleValues.minorTextColor}]}\n                labelStyle={defaults.dropdownText}\n                searchableStyle={defaults.dropdownText}\n                activeLabelStyle={defaults.dropdownText}\n                selectedLabelStyle={defaults.dropdownText}\n                items={[]}\n                {...this.props.extraProps}\n            />\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}