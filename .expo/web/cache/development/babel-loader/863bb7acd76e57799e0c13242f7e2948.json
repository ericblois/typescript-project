{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/ericblois/Development/React Native/typescript-project/app/CustomComponents/SearchResultItem.tsx\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport { styleValues } from \"../HelperFiles/StyleSheet\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport BusinessDataHandler from \"../HelperFiles/BusinessDataHandler\";\n\nvar SearchResultItem = function (_Component) {\n  _inherits(SearchResultItem, _Component);\n\n  var _super = _createSuper(SearchResultItem);\n\n  function SearchResultItem() {\n    var _this;\n\n    _classCallCheck(this, SearchResultItem);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _this.getBusinessInfo = function _callee() {\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(BusinessDataHandler.getBusinessInfo(_this.props.businessData).catch(function (e) {\n                return console.error(e);\n              }));\n\n            case 2:\n              _this.businessInfo = _this.props.businessData.info;\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    return _this;\n  }\n\n  _createClass(SearchResultItem, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getBusinessInfo();\n    }\n  }, {\n    key: \"displayLoadingScreen\",\n    value: function displayLoadingScreen() {\n      if (this.businessInfo) {\n        return React.createElement(ActivityIndicator, {\n          style: styles.loadingScreen,\n          size: \"large\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 15\n          }\n        });\n      }\n\n      return React.createElement(React.Fragment, null);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this,\n          _this$businessInfo,\n          _this$businessInfo2,\n          _this$businessInfo3,\n          _this$businessInfo4;\n\n      return !this.businessInfo ? this.displayLoadingScreen() : React.createElement(TouchableOpacity, {\n        style: styles.resultItemContainer,\n        onPress: function onPress() {\n          return _this2.props.navigation.navigate(\"business\", {\n            businessData: _this2.props.businessData\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }\n      }, React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }\n      }, React.createElement(Image, {\n        style: styles.resultImage,\n        resizeMethod: \"scale\",\n        resizeMode: \"cover\",\n        source: {\n          uri: (_this$businessInfo = this.businessInfo) == null ? void 0 : _this$businessInfo.profileImage\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }\n      })), React.createElement(View, {\n        style: styles.resultInfoContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }\n      }, React.createElement(View, {\n        style: styles.resultUpperInfo,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        style: styles.resultName,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 17\n        }\n      }, (_this$businessInfo2 = this.businessInfo) == null ? void 0 : _this$businessInfo2.name), React.createElement(Text, {\n        style: styles.resultType,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 17\n        }\n      }, (_this$businessInfo3 = this.businessInfo) == null ? void 0 : _this$businessInfo3.businessType)), React.createElement(View, {\n        style: styles.resultLowerInfo,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 17\n        }\n      }, (_this$businessInfo4 = this.businessInfo) == null ? void 0 : _this$businessInfo4.totalRating), React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          return useNavigation().navigate(\"business\", {\n            businessData: _this2.props.businessData\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 17\n        }\n      }, React.createElement(Image, {\n        style: styles.favButton,\n        resizeMethod: \"scale\",\n        resizeMode: \"contain\",\n        source: require(\"../../assets/hollowStarIcon.png\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 17\n        }\n      })))));\n    }\n  }]);\n\n  return SearchResultItem;\n}(Component);\n\nexport { SearchResultItem as default };\nvar styles = StyleSheet.create({\n  loadingScreen: {\n    position: \"absolute\",\n    top: 0,\n    backgroundColor: \"#fff\",\n    width: \"100%\",\n    height: \"100%\"\n  },\n  resultItemContainer: {\n    backgroundColor: \"#fff\",\n    borderColor: styleValues.bordColor,\n    borderRadius: styleValues.bordRadius,\n    borderWidth: styleValues.minorBorderWidth,\n    height: styleValues.winWidth * 0.25,\n    width: styleValues.winWidth * 0.95,\n    marginTop: styleValues.mediumPadding,\n    padding: styleValues.minorPadding,\n    flexDirection: \"row\",\n    justifyContent: \"space-between\"\n  },\n  resultInfoContainer: {\n    flex: 1,\n    marginLeft: \"1%\"\n  },\n  resultName: {\n    fontSize: styleValues.mediumTextSize,\n    color: styleValues.majorTextColor\n  },\n  resultUpperInfo: {\n    flex: 2\n  },\n  resultLowerInfo: {\n    flex: 1,\n    flexDirection: \"row\",\n    alignItems: \"baseline\",\n    justifyContent: \"space-between\"\n  },\n  resultType: {\n    fontSize: styleValues.smallestTextSize,\n    color: styleValues.minorTextColor\n  },\n  resultImage: {\n    aspectRatio: 1,\n    flex: 1,\n    borderRadius: styleValues.bordRadius / 1.5\n  },\n  favButton: {\n    height: \"100%\",\n    aspectRatio: 1,\n    tintColor: \"black\"\n  }\n});","map":{"version":3,"sources":["/Users/ericblois/Development/React Native/typescript-project/app/CustomComponents/SearchResultItem.tsx"],"names":["React","Component","styleValues","useNavigation","BusinessDataHandler","SearchResultItem","getBusinessInfo","props","businessData","catch","e","console","error","businessInfo","info","styles","loadingScreen","displayLoadingScreen","resultItemContainer","navigation","navigate","resultImage","uri","profileImage","resultInfoContainer","resultUpperInfo","resultName","name","resultType","businessType","resultLowerInfo","totalRating","favButton","require","StyleSheet","create","position","top","backgroundColor","width","height","borderColor","bordColor","borderRadius","bordRadius","borderWidth","minorBorderWidth","winWidth","marginTop","mediumPadding","padding","minorPadding","flexDirection","justifyContent","flex","marginLeft","fontSize","mediumTextSize","color","majorTextColor","alignItems","smallestTextSize","minorTextColor","aspectRatio","tintColor"],"mappings":"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","sourcesContent":["\nimport React, { Component } from \"react\";\nimport { View, TouchableOpacity, Image, Text, StyleSheet, ActivityIndicator } from \"react-native\";\nimport { styleValues } from \"../HelperFiles/StyleSheet\";\nimport {  useNavigation } from \"@react-navigation/native\";\nimport { PublicBusinessData, PrivateBusinessData } from \"../HelperFiles/Constants\";\nimport BusinessDataHandler from \"../HelperFiles/BusinessDataHandler\";\n\ntype Props = {\n  navigation: ReturnType<typeof useNavigation>,\n  businessData: PrivateBusinessData,\n}\n\ntype State = {}\n\nexport default class SearchResultItem extends Component<Props, State> {\n\n    businessInfo: PublicBusinessData | undefined;\n\n    getBusinessInfo = async () => {\n      await BusinessDataHandler.getBusinessInfo(this.props.businessData).catch((e) => console.error(e));\n      this.businessInfo = this.props.businessData.info!;\n    }\n\n    componentDidMount() {\n      this.getBusinessInfo();\n    }\n\n    displayLoadingScreen() {\n      if (this.businessInfo) {\n          return (\n              <ActivityIndicator style={styles.loadingScreen} size={\"large\"}/>\n          );\n      }\n      return <></>\n  }\n\n    render() {\n        return !this.businessInfo ? this.displayLoadingScreen() : (\n          <TouchableOpacity style={styles.resultItemContainer} onPress={() => this.props.navigation.navigate(\"business\", {businessData: this.props.businessData})}>\n            <View>\n            <Image\n                style={styles.resultImage}\n                resizeMethod={\"scale\"}\n                resizeMode={\"cover\"}\n                source={{uri: this.businessInfo?.profileImage}}\n            />\n            </View>\n            <View style={styles.resultInfoContainer}>\n            <View style={styles.resultUpperInfo}>\n                <Text style={styles.resultName}>{this.businessInfo?.name}</Text>\n                <Text style={styles.resultType}>{this.businessInfo?.businessType}</Text>\n            </View>\n            <View style={styles.resultLowerInfo}>\n                <Text>{this.businessInfo?.totalRating}</Text>\n                <TouchableOpacity onPress={() => useNavigation().navigate(\"business\", {businessData: this.props.businessData})}>\n                <Image\n                    style={styles.favButton}\n                    resizeMethod={\"scale\"}\n                    resizeMode={\"contain\"}\n                    source={require(\"../../assets/hollowStarIcon.png\")}\n                />\n                </TouchableOpacity>\n            </View>\n            </View>\n\n          </TouchableOpacity>\n        );\n    }\n}\n\nconst styles = StyleSheet.create({\n    loadingScreen: {\n      position: \"absolute\",\n      top: 0,\n      backgroundColor: \"#fff\",\n      width: \"100%\",\n      height: \"100%\",\n    },\n    resultItemContainer: {\n        backgroundColor: \"#fff\",\n        borderColor: styleValues.bordColor,\n        borderRadius: styleValues.bordRadius,\n        borderWidth: styleValues.minorBorderWidth,\n        height: styleValues.winWidth * 0.25,\n        width: styleValues.winWidth * 0.95,\n        marginTop: styleValues.mediumPadding,\n        padding: styleValues.minorPadding,\n        flexDirection: \"row\",\n        justifyContent: \"space-between\",\n      },\n      resultInfoContainer: {\n        flex: 1,\n        marginLeft: \"1%\",\n      },\n      resultName: {\n        fontSize: styleValues.mediumTextSize,\n        color: styleValues.majorTextColor,\n      },\n      resultUpperInfo: {\n        flex: 2,\n      },\n      resultLowerInfo: {\n        flex: 1,\n        flexDirection: \"row\",\n        alignItems: \"baseline\",\n        justifyContent: \"space-between\",\n      },\n      resultType: {\n        fontSize: styleValues.smallestTextSize,\n        color: styleValues.minorTextColor,\n      },\n      resultImage: {\n        aspectRatio: 1,\n        flex: 1,\n        borderRadius: styleValues.bordRadius / 1.5,\n      },\n      favButton: {\n        height: \"100%\",\n        aspectRatio: 1,\n        tintColor: \"black\",\n      },\n})"]},"metadata":{},"sourceType":"module"}