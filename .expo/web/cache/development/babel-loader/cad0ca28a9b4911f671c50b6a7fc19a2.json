{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/ericblois/Development/React Native/typescript-project/app/CustomComponents/MenuBar.tsx\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { defaults } from \"../HelperFiles/StyleSheet\";\nimport IconButton from \"./IconButton\";\n\nvar MenuBar = function (_Component) {\n  _inherits(MenuBar, _Component);\n\n  var _super = _createSuper(MenuBar);\n\n  function MenuBar(props) {\n    var _this;\n\n    _classCallCheck(this, MenuBar);\n\n    _this = _super.call(this, props);\n    _this.styles = StyleSheet.create({\n      menuBarStyle: _this.props.menuBarStyle ? _this.props.menuBarStyle : {},\n      buttonStyle: _this.props.buttonStyle ? _this.props.buttonStyle : {}\n    });\n    return _this;\n  }\n\n  _createClass(MenuBar, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(View, {\n        style: [defaults.menuBarNoColor, this.styles.menuBarStyle],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 7\n        }\n      }, this.props.buttonProps.map(function (props, index) {\n        return React.createElement(IconButton, _extends({}, props, {\n          key: index,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 20\n          }\n        }));\n      }));\n    }\n  }]);\n\n  return MenuBar;\n}(Component);\n\nexport { MenuBar as default };","map":{"version":3,"sources":["/Users/ericblois/Development/React Native/typescript-project/app/CustomComponents/MenuBar.tsx"],"names":["React","Component","defaults","IconButton","MenuBar","props","styles","StyleSheet","create","menuBarStyle","buttonStyle","menuBarNoColor","buttonProps","map","index"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;AAEA,SAA6BC,QAA7B;AAEA,OAAOC,UAAP;;IAWqBC,O;;;;;AAOnB,mBAAYC,KAAZ,EAA0B;AAAA;;AAAA;;AACxB,8BAAMA,KAAN;AACA,UAAKC,MAAL,GAAcC,UAAU,CAACC,MAAX,CAAkB;AAC9BC,MAAAA,YAAY,EAAE,MAAKJ,KAAL,CAAWI,YAAX,GAA0B,MAAKJ,KAAL,CAAWI,YAArC,GAAqD,EADrC;AAE9BC,MAAAA,WAAW,EAAE,MAAKL,KAAL,CAAWK,WAAX,GAAyB,MAAKL,KAAL,CAAWK,WAApC,GAAmD;AAFlC,KAAlB,CAAd;AAFwB;AAMzB;;;;6BAEQ;AAAA;;AACP,aACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE,CAACR,QAAQ,CAACS,cAAV,EAA0B,KAAKL,MAAL,CAAYG,YAAtC,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEI,KAAKJ,KAAL,CAAWO,WAAX,CAAuBC,GAAvB,CAA2B,UAACR,KAAD,EAAQS,KAAR,EAAkB;AAC3C,eAAO,oBAAC,UAAD,eAAgBT,KAAhB;AAAuB,UAAA,GAAG,EAAES,KAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAP;AACD,OAFD,CAFJ,CADF;AASD;;;;EAzBkCb,S;;SAAhBG,O","sourcesContent":["import React, { Component } from \"react\";\nimport { View, StyleSheet, ViewStyle, GestureResponderEvent } from \"react-native\";\nimport { styleValues, icons, defaults } from \"../HelperFiles/StyleSheet\";\nimport PropTypes from 'prop-types';\nimport IconButton from \"./IconButton\";\nimport { useNavigation  } from \"@react-navigation/native\";\n\ntype Props = {\n  buttonProps: IconButton['props'][],\n  menuBarStyle?: ViewStyle,\n  buttonStyle?: ViewStyle\n}\n\ntype State = {}\n\nexport default class MenuBar extends Component<Props, State> {\n\n  styles: {\n    menuBarStyle: ViewStyle;\n    buttonStyle: ViewStyle;\n  }\n\n  constructor(props: Props) {\n    super(props);\n    this.styles = StyleSheet.create({\n      menuBarStyle: this.props.menuBarStyle ? this.props.menuBarStyle! : {},\n      buttonStyle: this.props.buttonStyle ? this.props.buttonStyle! : {}\n    })\n  }\n\n  render() {\n    return (\n      <View style={[defaults.menuBarNoColor, this.styles.menuBarStyle]}>\n        {\n          this.props.buttonProps.map((props, index) => {\n            return <IconButton {...props} key={index}/>;\n          })\n        }\n      </View>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}