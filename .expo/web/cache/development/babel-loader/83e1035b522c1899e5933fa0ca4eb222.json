{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/ericblois/Development/React Native/typescript-project/app/CustomComponents/ProductCard.tsx\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { styleValues } from \"../HelperFiles/StyleSheet\";\nimport { currency } from \"../HelperFiles/Constants\";\nimport RatingVisual from \"./RatingVisual\";\n\nvar ProductCard = function (_Component) {\n  _inherits(ProductCard, _Component);\n\n  var _super = _createSuper(ProductCard);\n\n  function ProductCard(props) {\n    var _this;\n\n    _classCallCheck(this, ProductCard);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      totalRating: 0\n    };\n    return _this;\n  }\n\n  _createClass(ProductCard, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var count = 0;\n      var totalRating = 0;\n      this.props.productData.ratings.forEach(function (num, index) {\n        count += num;\n        totalRating += num * (index + 1);\n      });\n      this.setState({\n        totalRating: totalRating / count\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(TouchableOpacity, {\n        style: styles.cardContainer,\n        onPress: function onPress() {\n          if (_this2.props.onPress) {\n            _this2.props.onPress();\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 9\n        }\n      }, React.createElement(Image, {\n        style: styles.productImage,\n        resizeMethod: \"scale\",\n        resizeMode: \"cover\",\n        source: {\n          uri: this.props.productData.images[0]\n        },\n        onLoadEnd: function onLoadEnd() {\n          if (_this2.props.onLoadEnd) {\n            _this2.props.onLoadEnd();\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }\n      }), React.createElement(View, {\n        style: styles.productInfoArea,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        style: styles.productName,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 17\n        }\n      }, this.props.productData.name), React.createElement(Text, {\n        style: styles.productDescription,\n        numberOfLines: 3,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 17\n        }\n      }, this.props.productData.description), React.createElement(View, {\n        style: styles.productSubInfoArea,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 17\n        }\n      }, React.createElement(Text, {\n        style: styles.productPrice,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 25\n        }\n      }, currency + this.props.productData.price.toString()), React.createElement(RatingVisual, {\n        rating: this.state.totalRating,\n        height: styleValues.smallTextSize,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 25\n        }\n      }))));\n    }\n  }]);\n\n  return ProductCard;\n}(Component);\n\nexport { ProductCard as default };\nvar styles = StyleSheet.create({\n  cardContainer: {\n    backgroundColor: \"#fff\",\n    borderColor: styleValues.bordColor,\n    borderRadius: styleValues.bordRadius,\n    borderWidth: styleValues.minorBorderWidth,\n    height: styleValues.winWidth * 0.3,\n    width: styleValues.winWidth - styleValues.mediumPadding * 2,\n    marginTop: styleValues.mediumPadding,\n    padding: styleValues.minorPadding,\n    flexDirection: \"row\",\n    alignItems: \"center\"\n  },\n  productImage: {\n    height: \"100%\",\n    aspectRatio: 1,\n    borderRadius: styleValues.minorPadding,\n    marginRight: styleValues.minorPadding\n  },\n  productInfoArea: {\n    height: \"100%\",\n    flex: 1\n  },\n  productName: {\n    fontSize: styleValues.mediumTextSize\n  },\n  productDescription: {\n    fontSize: styleValues.smallestTextSize,\n    color: styleValues.minorTextColor\n  },\n  productPrice: {\n    fontSize: styleValues.smallTextSize\n  },\n  productSubInfoArea: {\n    width: \"100%\",\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"flex-end\",\n    position: \"absolute\",\n    bottom: 0\n  }\n});","map":{"version":3,"sources":["/Users/ericblois/Development/React Native/typescript-project/app/CustomComponents/ProductCard.tsx"],"names":["React","Component","styleValues","currency","RatingVisual","ProductCard","props","state","totalRating","count","productData","ratings","forEach","num","index","setState","styles","cardContainer","onPress","productImage","uri","images","onLoadEnd","productInfoArea","productName","name","productDescription","description","productSubInfoArea","productPrice","price","toString","smallTextSize","StyleSheet","create","backgroundColor","borderColor","bordColor","borderRadius","bordRadius","borderWidth","minorBorderWidth","height","winWidth","width","mediumPadding","marginTop","padding","minorPadding","flexDirection","alignItems","aspectRatio","marginRight","flex","fontSize","mediumTextSize","smallestTextSize","color","minorTextColor","justifyContent","position","bottom"],"mappings":"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","sourcesContent":["\nimport React, { Component } from \"react\";\nimport { View, TouchableOpacity, Image, Text, StyleSheet, GestureResponderEvent } from \"react-native\";\nimport { defaults, styleValues } from \"../HelperFiles/StyleSheet\";\nimport PropTypes from 'prop-types';\nimport { productPropType, currency, ProductData } from \"../HelperFiles/Constants\";\nimport RatingVisual from \"./RatingVisual\";\nimport { useNavigation } from \"@react-navigation/native\";\n\ntype Props = {\n    productData: ProductData,\n    onLoadEnd?: () => void,\n    onPress?: (event?: GestureResponderEvent) => void\n}\n\ntype State = {\n    totalRating: number\n}\n\nexport default class ProductCard extends Component<Props, State> {\n\n    constructor(props: Props) {\n        super(props);\n        this.state = {\n            totalRating: 0,\n        }\n    }\n\n    componentDidMount() {\n        let count = 0;\n        let totalRating = 0;\n        this.props.productData.ratings.forEach((num, index) => {\n            count += num;\n            totalRating += num*(index+1);\n        })\n        this.setState({totalRating: totalRating / count});\n    }\n\n    render() {\n        return (\n        <TouchableOpacity style={styles.cardContainer} onPress={() => {\n            if (this.props.onPress) {\n                this.props.onPress();\n            }\n        }}>\n            <Image\n                style={styles.productImage}\n                resizeMethod={\"scale\"}\n                resizeMode={\"cover\"}\n                source={{uri: this.props.productData.images[0]}}\n                onLoadEnd={() => {\n                    if (this.props.onLoadEnd) {\n                        this.props.onLoadEnd();\n                    }\n                }}\n            />\n            <View style={styles.productInfoArea}>\n                <Text style={styles.productName}>{this.props.productData.name}</Text>\n                <Text\n                style={styles.productDescription}\n                numberOfLines={3}\n                >\n                    {this.props.productData.description}\n                </Text>\n                <View style={styles.productSubInfoArea}>\n                        <Text style={styles.productPrice}>{currency + this.props.productData.price.toString()}</Text>\n                        <RatingVisual rating={this.state.totalRating} height={styleValues.smallTextSize}/>\n                    </View>\n            </View>\n        </TouchableOpacity>\n        );\n    }\n}\n\nconst styles = StyleSheet.create({\n    cardContainer: {\n        backgroundColor: \"#fff\",\n        borderColor: styleValues.bordColor,\n        borderRadius: styleValues.bordRadius,\n        borderWidth: styleValues.minorBorderWidth,\n        height: styleValues.winWidth * 0.3,\n        width: styleValues.winWidth - styleValues.mediumPadding*2,\n        marginTop: styleValues.mediumPadding,\n        padding: styleValues.minorPadding,\n        flexDirection: \"row\",\n        alignItems: \"center\",\n    },\n    productImage: {\n        height: \"100%\",\n        aspectRatio: 1,\n        borderRadius: styleValues.minorPadding,\n        marginRight: styleValues.minorPadding\n    },\n    productInfoArea: {\n        height: \"100%\",\n        flex: 1,\n    },\n    productName: {\n        fontSize: styleValues.mediumTextSize\n    },\n    productDescription: {\n        fontSize: styleValues.smallestTextSize,\n        color: styleValues.minorTextColor\n    },\n    productPrice: {\n        fontSize: styleValues.smallTextSize\n    },\n    productSubInfoArea: {\n        width: \"100%\",\n        flexDirection: \"row\",\n        justifyContent: \"space-between\",\n        alignItems: \"flex-end\",\n        position: \"absolute\",\n        bottom: 0\n    }\n})"]},"metadata":{},"sourceType":"module"}