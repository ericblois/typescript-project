{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/ericblois/Development/React Native/typescript-project/app/BusinessMainScreen.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { BusinessEditMainPage, BusinessEditInfoPage, NotificationsPage, AccountPage } from \"./HelperFiles/PageIndex\";\nimport { MenuBar } from \"./HelperFiles/CompIndex\";\nimport { styleValues } from \"./HelperFiles/StyleSheet\";\nimport { defaults, icons } from \"./HelperFiles/StyleSheet\";\nimport { BusinessMainStack } from \"./HelperFiles/Navigation\";\nimport { initialWindowMetrics } from \"react-native-safe-area-context\";\n\nvar BusinessMainScreen = function (_Component) {\n  _inherits(BusinessMainScreen, _Component);\n\n  var _super = _createSuper(BusinessMainScreen);\n\n  function BusinessMainScreen() {\n    var _this;\n\n    _classCallCheck(this, BusinessMainScreen);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      inEditMode: false\n    };\n    return _this;\n  }\n\n  _createClass(BusinessMainScreen, [{\n    key: \"getEditButtons\",\n    value: function getEditButtons(props) {\n      return [{\n        iconSource: icons.chevron,\n        buttonFunc: function buttonFunc() {\n          props.navigation.navigate(\"businessEditMain\");\n        }\n      }, {\n        iconSource: icons.checkBox,\n        buttonFunc: function buttonFunc() {\n          props.navigation.navigate(\"account\");\n        }\n      }];\n    }\n  }, {\n    key: \"getMainButtons\",\n    value: function getMainButtons(props) {\n      return [{\n        iconSource: icons.store,\n        buttonFunc: function buttonFunc() {\n          props.navigation.navigate(\"businessEditMain\");\n        }\n      }, {\n        iconSource: icons.profile,\n        buttonFunc: function buttonFunc() {\n          props.navigation.navigate(\"account\");\n        }\n      }];\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(View, {\n        style: defaults.screenContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 7\n        }\n      }, React.createElement(BusinessMainStack.Navigator, {\n        initialRouteName: \"businessEditMain\",\n        screenOptions: {\n          title: \"Sign Up\",\n          headerStatusBarHeight: 0,\n          header: function header(props) {\n            return React.createElement(MenuBar, {\n              buttonProps: _this2.state.inEditMode ? _this2.getEditButtons(props) : _this2.getMainButtons(props),\n              menuBarStyle: _objectSpread(_objectSpread({}, defaults.tabBar), styles.headerBar),\n              __self: _this2,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 19\n              }\n            });\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 9\n        }\n      }, React.createElement(BusinessMainStack.Screen, {\n        name: \"businessEditMain\",\n        component: BusinessEditMainPage,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }\n      }), React.createElement(BusinessMainStack.Screen, {\n        name: \"businessEditInfo\",\n        component: BusinessEditInfoPage,\n        listeners: {\n          focus: function focus() {\n            _this2.setState({\n              inEditMode: true\n            });\n          },\n          beforeRemove: function beforeRemove() {\n            _this2.setState({\n              inEditMode: false\n            });\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }\n      }), React.createElement(BusinessMainStack.Screen, {\n        name: \"notif\",\n        component: NotificationsPage,\n        options: {\n          animationEnabled: false\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }\n      }), React.createElement(BusinessMainStack.Screen, {\n        name: \"account\",\n        component: AccountPage,\n        options: {\n          animationEnabled: false\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }\n      })));\n    }\n  }]);\n\n  return BusinessMainScreen;\n}(Component);\n\nexport { BusinessMainScreen as default };\nvar headerBarTop = styleValues.winHeight - (initialWindowMetrics != null && initialWindowMetrics.insets.top ? initialWindowMetrics.insets.top : 0) - (initialWindowMetrics != null && initialWindowMetrics.insets.bottom ? initialWindowMetrics.insets.bottom : 0) - styleValues.winWidth * 0.15 - styleValues.mediumPadding * 2;\nvar styles = StyleSheet.create({\n  headerBar: {\n    bottom: undefined,\n    top: headerBarTop\n  }\n});","map":{"version":3,"sources":["/Users/ericblois/Development/React Native/typescript-project/app/BusinessMainScreen.tsx"],"names":["React","Component","BusinessEditMainPage","BusinessEditInfoPage","NotificationsPage","AccountPage","MenuBar","styleValues","defaults","icons","BusinessMainStack","initialWindowMetrics","BusinessMainScreen","state","inEditMode","props","iconSource","chevron","buttonFunc","navigation","navigate","checkBox","store","profile","screenContainer","title","headerStatusBarHeight","header","getEditButtons","getMainButtons","tabBar","styles","headerBar","focus","setState","beforeRemove","animationEnabled","headerBarTop","winHeight","insets","top","bottom","winWidth","mediumPadding","StyleSheet","create","undefined"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { StyleSheet, StatusBar, AppState, ActivityIndicator, View } from \"react-native\";\nimport { BusinessEditMainPage, BusinessEditInfoPage, NotificationsPage, AccountPage } from \"./HelperFiles/PageIndex\";\nimport { MenuBar } from \"./HelperFiles/CompIndex\"\nimport { styleValues } from \"./HelperFiles/StyleSheet\"\nimport { defaults, icons } from \"./HelperFiles/StyleSheet\";\nimport { BusinessMainStack, CustomerMainTab } from \"./HelperFiles/Navigation\";\nimport { initialWindowMetrics } from \"react-native-safe-area-context\";\nimport { StackNavigationProp, StackHeaderProps } from '@react-navigation/stack';\nimport { RootStackParamList } from \"./HelperFiles/Navigation\";\nimport { RouteProp } from '@react-navigation/native';\n\ntype BusinessMainNavigationProp = StackNavigationProp<RootStackParamList, \"businessMain\">;\n\ntype BusinessMainRouteProp = RouteProp<RootStackParamList, \"businessMain\">;\n\ntype Props = {\n    navigation: BusinessMainNavigationProp,\n    route: BusinessMainRouteProp\n}\n\ntype State = {\n  inEditMode: boolean\n}\n\nexport default class BusinessMainScreen extends Component<Props, State> {\n\n  state: Readonly<State> = {\n    inEditMode: false\n  };\n\n  getEditButtons(props: StackHeaderProps) {\n    return [\n      {\n          iconSource: icons.chevron,\n          buttonFunc: () => {props.navigation.navigate(\"businessEditMain\")},\n      },\n      {\n          iconSource: icons.checkBox,\n          buttonFunc: () => {props.navigation.navigate(\"account\")}\n      }\n    ]\n  }\n\n  getMainButtons(props: StackHeaderProps) {\n    return [\n      {\n          iconSource: icons.store,\n          buttonFunc: () => {props.navigation.navigate(\"businessEditMain\")},\n      },\n      {\n          iconSource: icons.profile,\n          buttonFunc: () => {props.navigation.navigate(\"account\")}\n      }\n    ]\n  }\n\n  render() {\n    return (\n      <View style={defaults.screenContainer}>\n        <BusinessMainStack.Navigator\n            initialRouteName={\"businessEditMain\"}\n            screenOptions={{\n              title: \"Sign Up\",\n              headerStatusBarHeight: 0,\n              header: (props) => (\n                  <MenuBar\n                      buttonProps={this.state.inEditMode ? this.getEditButtons(props) : this.getMainButtons(props)}\n                      menuBarStyle={{...defaults.tabBar, ...styles.headerBar}}\n                  />\n              )\n          }}\n        >\n          <BusinessMainStack.Screen\n              name={\"businessEditMain\"}\n              component={BusinessEditMainPage}\n          />\n          <BusinessMainStack.Screen\n              name={\"businessEditInfo\"}\n              component={BusinessEditInfoPage}\n              listeners={{\n                focus: () => {\n                  this.setState({inEditMode: true})\n                },\n                beforeRemove: () => {\n                  this.setState({inEditMode: false})\n                }\n              }}\n          />\n          <BusinessMainStack.Screen\n              name={\"notif\"} \n              component={NotificationsPage}\n              options={{\n                animationEnabled: false\n              }}\n          />\n          <BusinessMainStack.Screen\n              name={\"account\"}\n              component={AccountPage}\n              options={{\n                animationEnabled: false\n              }}\n          />\n        </BusinessMainStack.Navigator>\n      </View>\n    );\n  }\n}\n\nconst headerBarTop = styleValues.winHeight\n    - (initialWindowMetrics?.insets.top ? initialWindowMetrics!.insets.top : 0)\n    - (initialWindowMetrics?.insets.bottom ? initialWindowMetrics!.insets.bottom : 0)\n    - styleValues.winWidth * 0.15\n    - styleValues.mediumPadding*2\n\nconst styles = StyleSheet.create({\n    headerBar: {\n        bottom: undefined,\n        top: headerBarTop,\n    }\n})"]},"metadata":{},"sourceType":"module"}