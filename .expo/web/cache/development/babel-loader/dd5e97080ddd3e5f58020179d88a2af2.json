{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/ericblois/Development/React Native/typescript-project/app/CustomComponents/RatingVisual.tsx\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { styleValues } from \"../HelperFiles/StyleSheet\";\n\nvar RatingVisual = function (_Component) {\n  _inherits(RatingVisual, _Component);\n\n  var _super = _createSuper(RatingVisual);\n\n  function RatingVisual() {\n    var _this;\n\n    _classCallCheck(this, RatingVisual);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.height = _this.props.height ? _this.props.height : styleValues.smallTextSize;\n    return _this;\n  }\n\n  _createClass(RatingVisual, [{\n    key: \"renderIcons\",\n    value: function renderIcons() {\n      var _this2 = this;\n\n      return Array(5).fill(null).map(function (value, index) {\n        var floorRating = Math.floor(_this2.props.rating);\n        var remainder = _this2.props.rating - floorRating;\n\n        var iconSource = require(\"../../assets/starHollowIcon.png\");\n\n        if (index + 1 <= floorRating) {\n          iconSource = require(\"../../assets/starIcon.png\");\n        } else if (index <= floorRating) {\n          if (remainder < 0.25) {\n            iconSource = require(\"../../assets/starHollowIcon.png\");\n          } else if (remainder < 0.75) {\n              iconSource = require(\"../../assets/starHalfIcon.png\");\n            } else {\n                iconSource = require(\"../../assets/starIcon.png\");\n              }\n        }\n\n        return React.createElement(Image, {\n          source: iconSource,\n          resizeMethod: \"scale\",\n          resizeMode: \"center\",\n          style: [styles.starIcon, {\n            width: _this2.height\n          }],\n          key: index,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 20\n          }\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        style: styles.ratingContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        style: [styles.ratingText, {\n          fontSize: this.height * 0.9\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 17\n        }\n      }, this.props.rating.toFixed(1)), this.renderIcons());\n    }\n  }]);\n\n  return RatingVisual;\n}(Component);\n\nexport { RatingVisual as default };\nvar styles = StyleSheet.create({\n  ratingContainer: {\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n    alignItems: \"flex-start\"\n  },\n  ratingText: {\n    fontSize: styleValues.smallTextSize * 0.9,\n    marginRight: styleValues.minorPadding\n  },\n  starIcon: {\n    width: styleValues.smallTextSize,\n    aspectRatio: 1,\n    tintColor: styleValues.darkGreyColor,\n    marginRight: styleValues.minorPadding / 2\n  }\n});","map":{"version":3,"sources":["/Users/ericblois/Development/React Native/typescript-project/app/CustomComponents/RatingVisual.tsx"],"names":["React","Component","styleValues","RatingVisual","height","props","smallTextSize","Array","fill","map","value","index","floorRating","Math","floor","rating","remainder","iconSource","require","styles","starIcon","width","ratingContainer","ratingText","fontSize","toFixed","renderIcons","StyleSheet","create","flexDirection","justifyContent","alignItems","marginRight","minorPadding","aspectRatio","tintColor","darkGreyColor"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;;;AAEA,SAASC,WAAT;;IAWqBC,Y;;;;;;;;;;;;;;;UAEjBC,M,GAAS,MAAKC,KAAL,CAAWD,MAAX,GAAoB,MAAKC,KAAL,CAAWD,MAA/B,GAAwCF,WAAW,CAACI,a;;;;;;kCAE/C;AAAA;;AACV,aAAOC,KAAK,CAAC,CAAD,CAAL,CAASC,IAAT,CAAc,IAAd,EAAoBC,GAApB,CAAwB,UAACC,KAAD,EAAQC,KAAR,EAAkB;AAC7C,YAAMC,WAAW,GAAGC,IAAI,CAACC,KAAL,CAAW,MAAI,CAACT,KAAL,CAAWU,MAAtB,CAApB;AACA,YAAMC,SAAS,GAAG,MAAI,CAACX,KAAL,CAAWU,MAAX,GAAoBH,WAAtC;;AACA,YAAIK,UAAU,GAAGC,OAAO,mCAAxB;;AAEA,YAAIP,KAAK,GAAG,CAAR,IAAaC,WAAjB,EAA8B;AAC1BK,UAAAA,UAAU,GAAGC,OAAO,6BAApB;AACH,SAFD,MAEO,IAAIP,KAAK,IAAIC,WAAb,EAA0B;AAE7B,cAAII,SAAS,GAAG,IAAhB,EAAsB;AAClBC,YAAAA,UAAU,GAAGC,OAAO,mCAApB;AACH,WAFD,MAGK,IAAIF,SAAS,GAAG,IAAhB,EAAsB;AACvBC,cAAAA,UAAU,GAAGC,OAAO,iCAApB;AACH,aAFI,MAGA;AACDD,gBAAAA,UAAU,GAAGC,OAAO,6BAApB;AACH;AACJ;;AACD,eAAO,oBAAC,KAAD;AACH,UAAA,MAAM,EAAED,UADL;AAEH,UAAA,YAAY,EAAE,OAFX;AAGH,UAAA,UAAU,EAAE,QAHT;AAIH,UAAA,KAAK,EAAE,CAACE,MAAM,CAACC,QAAR,EAAkB;AAACC,YAAAA,KAAK,EAAE,MAAI,CAACjB;AAAb,WAAlB,CAJJ;AAKH,UAAA,GAAG,EAAEO,KALF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAOH,OA1BM,CAAP;AA2BH;;;6BAEQ;AACL,aACI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEQ,MAAM,CAACG,eAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE,CAACH,MAAM,CAACI,UAAR,EAAoB;AAACC,UAAAA,QAAQ,EAAE,KAAKpB,MAAL,GAAY;AAAvB,SAApB,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAgE,KAAKC,KAAL,CAAWU,MAAX,CAAkBU,OAAlB,CAA0B,CAA1B,CAAhE,CADJ,EAEK,KAAKC,WAAL,EAFL,CADJ;AAMH;;;;EAzCqCzB,S;;SAArBE,Y;AA4CrB,IAAMgB,MAAM,GAAGQ,UAAU,CAACC,MAAX,CAAkB;AAC7BN,EAAAA,eAAe,EAAE;AACbO,IAAAA,aAAa,EAAE,KADF;AAEbC,IAAAA,cAAc,EAAE,QAFH;AAGbC,IAAAA,UAAU,EAAE;AAHC,GADY;AAM7BR,EAAAA,UAAU,EAAE;AACRC,IAAAA,QAAQ,EAAEtB,WAAW,CAACI,aAAZ,GAA0B,GAD5B;AAER0B,IAAAA,WAAW,EAAE9B,WAAW,CAAC+B;AAFjB,GANiB;AAW7Bb,EAAAA,QAAQ,EAAE;AACNC,IAAAA,KAAK,EAAEnB,WAAW,CAACI,aADb;AAEN4B,IAAAA,WAAW,EAAE,CAFP;AAGNC,IAAAA,SAAS,EAAEjC,WAAW,CAACkC,aAHjB;AAINJ,IAAAA,WAAW,EAAE9B,WAAW,CAAC+B,YAAZ,GAAyB;AAJhC;AAXmB,CAAlB,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { Text, Image, StyleSheet, View } from \"react-native\";\nimport { styleValues } from \"../HelperFiles/StyleSheet\";\nimport PropTypes from 'prop-types';\nimport { useNavigation } from \"@react-navigation/native\";\n\ntype Props = {\n    rating: number,\n    height?: number\n}\n  \ntype State = {}\n\nexport default class RatingVisual extends Component<Props, State> {\n\n    height = this.props.height ? this.props.height : styleValues.smallTextSize;\n\n    renderIcons() {\n        return Array(5).fill(null).map((value, index) => {\n            const floorRating = Math.floor(this.props.rating);\n            const remainder = this.props.rating - floorRating;\n            let iconSource = require(\"../../assets/starHollowIcon.png\");\n            // Check if this star should be filled\n            if (index + 1 <= floorRating) {\n                iconSource = require(\"../../assets/starIcon.png\");\n            } else if (index <= floorRating) {\n                // Check if this star should be hollow\n                if (remainder < 0.25) {\n                    iconSource = require(\"../../assets/starHollowIcon.png\");\n                } // Check if this star should be half filled\n                else if (remainder < 0.75) {\n                    iconSource = require(\"../../assets/starHalfIcon.png\");\n                } // This star should be filled\n                else {\n                    iconSource = require(\"../../assets/starIcon.png\");\n                }\n            }\n            return <Image\n                source={iconSource}\n                resizeMethod={\"scale\"}\n                resizeMode={\"center\"}\n                style={[styles.starIcon, {width: this.height}]}\n                key={index}\n            />\n        })\n    }\n\n    render() {\n        return (\n            <View style={styles.ratingContainer}>\n                <Text style={[styles.ratingText, {fontSize: this.height*0.9}]}>{this.props.rating.toFixed(1)}</Text>\n                {this.renderIcons()}\n            </View>\n        )\n    }\n}\n\nconst styles = StyleSheet.create({\n    ratingContainer: {\n        flexDirection: \"row\",\n        justifyContent: \"center\",\n        alignItems: \"flex-start\"\n    },\n    ratingText: {\n        fontSize: styleValues.smallTextSize*0.9,\n        marginRight: styleValues.minorPadding,\n        //borderWidth: 1\n    },\n    starIcon: {\n        width: styleValues.smallTextSize,\n        aspectRatio: 1,\n        tintColor: styleValues.darkGreyColor,\n        marginRight: styleValues.minorPadding/2,\n        //borderWidth: 1\n    }\n\n});\n"]},"metadata":{},"sourceType":"module"}