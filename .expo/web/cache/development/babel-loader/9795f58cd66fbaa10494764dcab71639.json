{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport * as firebase from \"firebase\";\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\nimport PropTypes from 'prop-types';\nimport Image from \"react-native-web/dist/exports/Image\";\nexport var locationDocString = \"/publicBusinessData/canada/regions/quebec/cities/montreal\";\nexport var googleAPIKey = \"AIzaSyCaUD7QSZ1d_Mo4ygBA0BhMp7DYMIlu2vo\";\nexport var firebaseConfig = {\n  apiKey: \"AIzaSyBb7qoF1YQEAcovFU93LfVOI_JEFxPqB7o\",\n  authDomain: \"testproject-7e9fe.firebaseapp.com\",\n  databaseURL: \"https://testproject-7e9fe.firebaseio.com\",\n  projectId: \"testproject-7e9fe\",\n  storageBucket: \"testproject-7e9fe.appspot.com\",\n  messagingSenderId: \"608655605733\",\n  appId: \"1:608655605733:web:1b1ac787f3eb724dcc390c\",\n  measurementId: \"G-2BEXHVGXH8\"\n};\nvar firebaseAppName = \"TestApp\";\n\nif (!firebase.default.apps.length) {\n  firebase.default.initializeApp(firebaseConfig);\n}\n\nexport var auth = firebase.default.auth();\nexport var firestore = firebase.default.firestore();\nexport var businessDB = firestore.collection(\"businesses\");\n\nvar pluralize = require(\"pluralize\");\n\nexport var getQueryTerms = function getQueryTerms(searchText) {\n  var formattedSearch = searchText.toLowerCase().replace(/’+|'+/gi, \"\");\n  var strings = formattedSearch.split(/\\W+/g);\n  var keywords = [];\n  strings.forEach(function (string) {\n    var singular = pluralize.singular(string);\n\n    if (!keywords.includes(singular)) {\n      keywords.push(singular);\n    }\n  });\n  return keywords;\n};\nexport var isProductOption = function isProductOption(input) {\n  if (input === undefined || input === null) {\n    return false;\n  }\n\n  console.log(input);\n  var optionSchema = {\n    name: \"string\",\n    priceChange: \"number\",\n    image: \"string\"\n  };\n  var isValid = true;\n\n  for (var key in optionSchema) {\n    if (input[key] === undefined || input[key] === null) {\n      console.log(key);\n      isValid = false;\n      break;\n    }\n  }\n\n  return isValid;\n};\nexport var isProductOptionType = function isProductOptionType(input) {\n  if (input === undefined || input === null) {\n    return false;\n  }\n\n  var optionTypeSchema = {\n    name: \"string\",\n    options: \"object[]\"\n  };\n  var isValid = true;\n\n  for (var key in optionTypeSchema) {\n    if (input[key] === undefined || input[key] === null) {\n      isValid = false;\n      break;\n    }\n\n    if (key === \"options\") {\n      var options = input[key];\n      var invalidOptions = options.filter(function (option) {\n        return !isProductOption(option);\n      });\n\n      if (invalidOptions.length !== 0) {\n        isValid = false;\n        break;\n      }\n    }\n  }\n\n  return isValid;\n};\nexport var isProductData = function isProductData(input) {\n  if (input === undefined || input === null) {\n    return false;\n  }\n\n  var productSchema = {\n    businessID: \"string\",\n    category: \"string\",\n    name: \"string\",\n    price: \"number\",\n    description: \"string\",\n    images: \"string[]\",\n    optionTypes: \"object[]\",\n    ratings: \"number[]\",\n    extraInfo: \"string\"\n  };\n  var isValid = true;\n\n  for (var key in productSchema) {\n    if (input[key] === undefined || input[key] === null) {\n      isValid = false;\n      break;\n    }\n\n    if (key === \"optionTypes\") {\n      var optionTypes = input[key];\n      var invalidOptionTypes = optionTypes.filter(function (optionType) {\n        return !isProductOptionType(optionType);\n      });\n\n      if (invalidOptionTypes.length !== 0) {\n        isValid = false;\n        break;\n      }\n    }\n  }\n\n  return isValid;\n};\nexport var isProductCategory = function isProductCategory(input) {\n  if (input === undefined || input === null) {\n    return false;\n  }\n\n  console.log(input);\n  var categorySchema = {\n    category: \"string\",\n    products: \"ProductData[]\"\n  };\n  var isValid = true;\n\n  for (var key in categorySchema) {\n    if (input[key] === undefined || input[key] === null) {\n      console.log(key);\n      isValid = false;\n      break;\n    }\n\n    if (key === \"products\") {\n      var products = input[key];\n      var invalidProducts = products.filter(function (product) {\n        return !isProductOptionType(product);\n      });\n\n      if (invalidProducts.length !== 0) {\n        console.log(key);\n        isValid = false;\n        break;\n      }\n    }\n  }\n\n  return isValid;\n};\nexport var isProductList = function isProductList(input) {\n  var productList = input;\n\n  if (input === undefined || input === null) {\n    return false;\n  }\n\n  var isValid = true;\n\n  for (var index in productList) {\n    var isCategory = isProductCategory(productList[index]);\n\n    if (!isCategory) {\n      isValid = isCategory;\n      break;\n    }\n  }\n\n  return isValid;\n};\nexport var isBusinessInfo = function isBusinessInfo(input) {\n  var infoSchema = {\n    userID: \"string\",\n    businessID: \"string\",\n    name: \"string\",\n    profileImage: \"string\",\n    galleryImages: \"string[]\",\n    businessType: \"string\",\n    totalRating: \"number\",\n    description: \"string\",\n    address: \"string\",\n    city: \"string\",\n    region: \"string\",\n    country: \"string\",\n    postalCode: \"string\",\n    keywords: \"string[]\"\n  };\n  var isValid = true;\n\n  for (var key in infoSchema) {\n    if (input[key] === undefined || input[key] === null) {\n      isValid = false;\n      break;\n    }\n  }\n\n  return isValid;\n};\nexport var businessPropType = PropTypes.shape({\n  \"id\": PropTypes.string.isRequired,\n  \"name\": PropTypes.string.isRequired,\n  \"profileImage\": PropTypes.string.isRequired,\n  \"galleryImages\": PropTypes.arrayOf(PropTypes.string).isRequired,\n  \"businessType\": PropTypes.string.isRequired,\n  \"totalRating\": PropTypes.number.isRequired,\n  \"description\": PropTypes.string.isRequired,\n  \"address\": PropTypes.string.isRequired,\n  \"city\": PropTypes.string.isRequired,\n  \"region\": PropTypes.string.isRequired,\n  \"postalCode\": PropTypes.string.isRequired\n});\nexport var productPropType = PropTypes.shape({\n  \"name\": PropTypes.string.isRequired,\n  \"description\": PropTypes.string.isRequired,\n  \"price\": PropTypes.number.isRequired,\n  \"images\": PropTypes.arrayOf(PropTypes.string).isRequired,\n  \"optionTypes\": PropTypes.arrayOf(PropTypes.shape({\n    \"name\": PropTypes.string.isRequired,\n    \"selections\": PropTypes.arrayOf(PropTypes.shape({\n      \"name\": PropTypes.string.isRequired,\n      \"priceChange\": PropTypes.number.isRequired,\n      \"image\": PropTypes.string\n    }))\n  })),\n  \"ratings\": PropTypes.arrayOf(PropTypes.number).isRequired,\n  \"extraInfo\": PropTypes.string.isRequired\n});\nvar cachedImages = [];\nexport var prefetchImages = function prefetchImages(urlArray) {\n  var unfetchedURLs, prefetchTasks;\n  return _regeneratorRuntime.async(function prefetchImages$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          unfetchedURLs = [];\n          urlArray.forEach(function (url) {\n            if (!cachedImages.includes(url)) {\n              unfetchedURLs.push(url);\n            }\n          });\n          prefetchTasks = unfetchedURLs.map(function (url) {\n            return Image.prefetch(url).catch(function (e) {\n              return console.error(e);\n            });\n          });\n          _context.next = 5;\n          return _regeneratorRuntime.awrap(Promise.all(prefetchTasks).then(function (results) {\n            var downloadedAll = true;\n            var failCount = 0;\n            results.forEach(function (result, index) {\n              if (!result) {\n                downloadedAll = false;\n                failCount++;\n              } else {\n                cachedImages.push(unfetchedURLs[index]);\n              }\n            });\n\n            if (downloadedAll) {\n              console.log(\"All images were fetched.\");\n            } else {\n              console.log(failCount.toString() + \"/\" + unfetchedURLs.length.toString() + \" images failed to prefetch\");\n            }\n          }));\n\n        case 5:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\nexport var formatText = function formatText(string) {\n  return string.replace(/\\\\n/g, \"\\n\");\n};\nexport var currency = \"$\";\nexport var regionCodes = {\n  \"Ontario\": \"ON\",\n  \"Quebec\": \"QC\",\n  \"British Columbia\": \"BC\",\n  \"Alberta\": \"AB\",\n  \"Manitoba\": \"MB\",\n  \"Saskatchewan\": \"SK\",\n  \"Nova Scotia\": \"NS\",\n  \"New Brunswick\": \"NB\",\n  \"Newfoundland and Labrador\": \"NL\",\n  \"Prince Edward Island\": \"PE\",\n  \"Northwest Territories\": \"NT\",\n  \"Nunavut\": \"NU\",\n  \"Yukon\": \"YT\"\n};\nvar product = {\n  \"businessID\": \"eCHvdt5OwSpxphawLMaW\",\n  \"category\": \"Coffee\",\n  \"name\": \"Coffee\",\n  \"description\": \"A freshly brewed coffee that you can enjoy throughout the day. In 2008 our master blenders and roasters created this for you — a smooth, well-rounded blend of Latin American coffees with subtly rich flavors of chocolate and toasted nuts, it’s served fresh every day.\",\n  \"price\": 2.99,\n  \"images\": [\"https://upload.wikimedia.org/wikipedia/commons/4/45/A_small_cup_of_coffee.JPG\", \"https://post.healthline.com/wp-content/uploads/2020/08/ways-to-make-coffee-super-healthy-1200x628-facebook-1200x628.jpg\", \"https://loseitblog.com/wp-content/uploads/2019/01/Coffee-Islamorada-.png\", \"https://cdn.cancercenter.com/-/media/ctca/images/others/blogs/2019/01-january/01-blog-coffee-l.jpg\"],\n  \"optionTypes\": [{\n    \"name\": \"Size\",\n    \"options\": [{\n      \"name\": \"Small\",\n      \"priceChange\": -1,\n      \"image\": \"\"\n    }, {\n      \"name\": \"Medium\",\n      \"priceChange\": 0,\n      \"image\": \"\"\n    }, {\n      \"name\": \"Large\",\n      \"priceChange\": 1,\n      \"image\": \"\"\n    }]\n  }, {\n    \"name\": \"Roast\",\n    \"options\": [{\n      \"name\": \"Light\",\n      \"priceChange\": 0,\n      \"image\": \"\"\n    }, {\n      \"name\": \"Medium\",\n      \"priceChange\": 0,\n      \"image\": \"\"\n    }, {\n      \"name\": \"Dark\",\n      \"priceChange\": 0,\n      \"image\": \"\"\n    }]\n  }],\n  \"ratings\": [17, 3, 56, 117, 83],\n  \"extraInfo\": \"May contain milk.\"\n};","map":{"version":3,"sources":["/Users/ericblois/Development/React Native/typescript-project/app/HelperFiles/Constants.tsx"],"names":["firebase","PropTypes","locationDocString","googleAPIKey","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firebaseAppName","default","apps","length","initializeApp","auth","firestore","businessDB","collection","pluralize","require","getQueryTerms","searchText","formattedSearch","toLowerCase","replace","strings","split","keywords","forEach","string","singular","includes","push","isProductOption","input","undefined","console","log","optionSchema","name","priceChange","image","isValid","key","isProductOptionType","optionTypeSchema","options","invalidOptions","filter","option","isProductData","productSchema","businessID","category","price","description","images","optionTypes","ratings","extraInfo","invalidOptionTypes","optionType","isProductCategory","categorySchema","products","invalidProducts","product","isProductList","productList","index","isCategory","isBusinessInfo","infoSchema","userID","profileImage","galleryImages","businessType","totalRating","address","city","region","country","postalCode","businessPropType","shape","isRequired","arrayOf","number","productPropType","cachedImages","prefetchImages","urlArray","unfetchedURLs","url","prefetchTasks","map","Image","prefetch","catch","e","error","Promise","all","then","results","downloadedAll","failCount","result","toString","formatText","currency","regionCodes"],"mappings":"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","sourcesContent":["import * as firebase from \"firebase\";\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\nimport PropTypes from 'prop-types';\nimport { Image } from \"react-native\";\nimport {ProductData, ProductOption, ProductOptionType, ProductCategory, PublicBusinessData } from \"./DataTypes\"\n\nexport const locationDocString = \"/publicBusinessData/canada/regions/quebec/cities/montreal\"\n\nexport const googleAPIKey = \"AIzaSyCaUD7QSZ1d_Mo4ygBA0BhMp7DYMIlu2vo\";\n\nexport const firebaseConfig = {\n  apiKey: \"AIzaSyBb7qoF1YQEAcovFU93LfVOI_JEFxPqB7o\",\n  authDomain: \"testproject-7e9fe.firebaseapp.com\",\n  databaseURL: \"https://testproject-7e9fe.firebaseio.com\",\n  projectId: \"testproject-7e9fe\",\n  storageBucket: \"testproject-7e9fe.appspot.com\",\n  messagingSenderId: \"608655605733\",\n  appId: \"1:608655605733:web:1b1ac787f3eb724dcc390c\",\n  measurementId: \"G-2BEXHVGXH8\"\n}\n\nconst firebaseAppName = \"TestApp\"\n\n\n// Initialize Firebase\nif (!firebase.default.apps.length) {\n    firebase.default.initializeApp(firebaseConfig);\n}\n\nexport const auth = firebase.default.auth();\n\nexport const firestore = firebase.default.firestore();\n\nexport const businessDB = firestore.collection(\"businesses\");\n\nconst pluralize = require(\"pluralize\");\n// Splits a string into individual query terms\nexport const getQueryTerms = (searchText: string) => {\n  // Convert the search text to lowercase, and remove any apostrophes\n  let formattedSearch = searchText.toLowerCase().replace(/’+|'+/gi, \"\");\n  // Seperate the search string into its individual words, based on any non-word characters (anything that isn't 0-9, a-z, A-Z, or _)\n  let strings = formattedSearch.split(/\\W+/g);\n  // Convert plural words into their singular form\n  let keywords: string[] = [];\n  strings.forEach((string) => {\n    let singular: string = pluralize.singular(string);\n    if (!(keywords.includes(singular))) {\n      keywords.push(singular);\n    }\n  })\n  return keywords;\n}\n\n\n/*\nexport const createNewBusiness = async (email: string, password: string, businessInfo: PublicBusinessData) => {\n  return await auth.createUserWithEmailAndPassword(email, password).then(async (cred) => {\n    if (cred.user === null) {\n      console.error(\"Failed to create new business.\");\n      return false;\n    }\n    const formattedCountry = businessInfo[\"country\"].toLowerCase().replace(/\\s+/g, \"_\").replace(/\\W+/g, \"\");\n    const formattedRegion = businessInfo[\"region\"] ? businessInfo[\"region\"].toLowerCase().replace(/\\s+/g, \"_\").replace(/\\W+/g, \"\") : null;\n    const formattedCity = businessInfo[\"city\"].toLowerCase().replace(/\\s+/g, \"_\").replace(/\\W+/g, \"\");\n    let cityCollection = firestore.collection(\"/publicbusinessData/\" + formattedCountry + \"/regions/\" + formattedRegion + \"/cities/\" + formattedCity + \"/ids\");\n    return await ServerData.addDocument(businessInfo, cityCollection, cred.user.uid).catch((e) => {throw e});\n  })\n}*/\n\nexport const isProductOption = (input: any): boolean => {\n  if (input === undefined || input === null) {\n    return false;\n  }\n  console.log(input)\n  // Create a schema of a ProductOption object\n  const optionSchema: Record<\"name\" | \"priceChange\" | \"image\", string> = {\n    name: \"string\",\n    priceChange: \"number\",\n    image: \"string\"\n  }\n  let isValid = true;\n  // If any property doesn't exist, stop iterating and return\n  for (const key in optionSchema) {\n    if (input[key] === undefined || input[key] === null) {\n      console.log(key)\n      isValid = false;\n      break;\n    }\n  }\n  return isValid;\n}\n\nexport const isProductOptionType = (input: any): boolean => {\n  if (input === undefined || input === null) {\n    return false;\n  }\n  // Create a schema of a ProductOptionType object\n  const optionTypeSchema: Record<\"name\" | \"options\", string> = {\n    name: \"string\",\n    options: \"object[]\"\n  }\n  let isValid = true;\n  // If any property doesn't exist, stop iterating and return\n  for (const key in optionTypeSchema) {\n    // Check if the property exists\n    if (input[key] === undefined || input[key] === null) {\n      isValid = false;\n      break;\n    }\n    if (key === \"options\") {\n      const options = input[key] as ProductOption[]\n      const invalidOptions = options.filter((option) => !isProductOption(option));\n      if (invalidOptions.length !== 0) {\n        isValid = false;\n        break;\n      }\n    }\n  }\n  return isValid;\n}\n\nexport const isProductData = (input: any): boolean => {\n  if (input === undefined || input === null) {\n    return false;\n  }\n  // Create a schema of a ProductData object\n  const productSchema: Record<keyof ProductData, string> = {\n    businessID: \"string\",\n    category: \"string\",\n    name: \"string\",\n    price: \"number\",\n    description: \"string\",\n    images: \"string[]\",\n    optionTypes: \"object[]\",\n    ratings: \"number[]\",\n    extraInfo: \"string\"\n  }\n  let isValid = true;\n  // If any property doesn't exist, stop iterating and return\n  for (const key in productSchema) {\n    // Check if the property exists\n    if (input[key] === undefined || input[key] === null) {\n      isValid = false;\n      break;\n    }\n    if (key === \"optionTypes\") {\n      const optionTypes = input[key] as ProductOptionType[];\n      const invalidOptionTypes = optionTypes.filter((optionType) => !isProductOptionType(optionType));\n      if (invalidOptionTypes.length !== 0) {\n        isValid = false;\n        break;\n      }\n    }\n  }\n  return isValid;\n}\n\nexport const isProductCategory = (input: any): boolean => {\n  // Check if the category exists\n  if (input === undefined || input === null) {\n    return false;\n  }\n  console.log(input)\n  // Create a schema of a ProductCategory object\n  const categorySchema: Record<keyof ProductCategory, string> = {\n    category: \"string\",\n    products: \"ProductData[]\"\n  }\n  let isValid = true;\n  // If any property doesn't exist, stop iterating and return\n  for (const key in categorySchema) {\n    // Check if the property exists on the input\n    if (input[key] === undefined || input[key] === null) {\n      console.log(key);\n      isValid = false;\n      break;\n    }\n    if (key === \"products\") {\n      const products = input[key] as ProductData[];\n      const invalidProducts = products.filter((product) => !isProductOptionType(product));\n      if (invalidProducts.length !== 0) {\n        console.log(key);\n        isValid = false;\n        break;\n      }\n    }\n  }\n  return isValid;\n}\n\nexport const isProductList = (input: any): boolean => {\n  const productList = input as ProductCategory[]\n  // Check if the array exists\n  if (input === undefined || input === null) {\n    return false;\n  }\n  let isValid = true;\n  for (const index in productList) {\n    const isCategory = isProductCategory(productList[index]);\n    if (!isCategory) {\n      isValid = isCategory;\n      break;\n    }\n  }\n  return isValid;\n}\n\nexport const isBusinessInfo = (input: any): boolean => {\n  // Create a schema of a PublicBusinessData object\n  const infoSchema: Record<keyof PublicBusinessData, string> = {\n    userID: \"string\",\n    businessID: \"string\",\n    name: \"string\",\n    profileImage: \"string\",\n    galleryImages: \"string[]\",\n    businessType: \"string\",\n    totalRating: \"number\",\n    description: \"string\",\n    address: \"string\",\n    city: \"string\",\n    region: \"string\",\n    country: \"string\",\n    postalCode: \"string\",\n    keywords: \"string[]\"\n  }\n  let isValid = true;\n  // If any property doesn't exist, stop iterating and return\n  for (const key in infoSchema) {\n    if (input[key] === undefined || input[key] === null) {\n      isValid = false;\n      break;\n    }\n  }\n  return isValid;\n}\n\nexport const businessPropType = PropTypes.shape({\n  \"id\": PropTypes.string.isRequired,\n  \"name\": PropTypes.string.isRequired,\n  \"profileImage\": PropTypes.string.isRequired,\n  \"galleryImages\": PropTypes.arrayOf(PropTypes.string).isRequired,\n  \"businessType\": PropTypes.string.isRequired,\n  \"totalRating\": PropTypes.number.isRequired,\n  \"description\": PropTypes.string.isRequired,\n  \"address\": PropTypes.string.isRequired,\n  \"city\": PropTypes.string.isRequired,\n  \"region\": PropTypes.string.isRequired,\n  \"postalCode\": PropTypes.string.isRequired,\n});\n\nexport const productPropType = PropTypes.shape({\n  \"name\": PropTypes.string.isRequired,\n  \"description\": PropTypes.string.isRequired,\n  \"price\": PropTypes.number.isRequired,\n  \"images\": PropTypes.arrayOf(PropTypes.string).isRequired,\n  \"optionTypes\": PropTypes.arrayOf(PropTypes.shape({\n    \"name\": PropTypes.string.isRequired,\n    \"selections\": PropTypes.arrayOf(PropTypes.shape({\n      \"name\": PropTypes.string.isRequired,\n      \"priceChange\": PropTypes.number.isRequired,\n      \"image\": PropTypes.string\n    }))\n  })),\n  \"ratings\": PropTypes.arrayOf(PropTypes.number).isRequired,\n  \"extraInfo\": PropTypes.string.isRequired\n})\n\n// List of cached image URLs\nlet cachedImages: string[] = [];\n\n// Prefetch the images before rendering the page, and cache them for later use\nexport const prefetchImages = async (urlArray: string[]) => {\n    let unfetchedURLs: string[] = [];\n    //Check if images have already been prefetched\n    urlArray.forEach((url) => {\n      if (!cachedImages.includes(url)) {\n        unfetchedURLs.push(url);\n      }\n    })\n    \n    // Get array of prefetch tasks for each image URL\n    const prefetchTasks = unfetchedURLs.map((url) => {\n        // Attempt to prefetch the URL, if it fails then print the error message\n        return Image.prefetch(url).catch((e) => console.error(e));\n    })\n    // Check if all images were successfully downloaded / prefetched\n    await Promise.all(prefetchTasks).then((results) => {\n        let downloadedAll = true;\n        let failCount = 0;\n        // Add successful prefetches to the cahed URLs, count failures\n        results.forEach((result, index) => {\n            if (!result) {\n                downloadedAll = false;\n                failCount++;\n            } else {\n              cachedImages.push(unfetchedURLs[index])\n            }\n        })\n        if (downloadedAll) {\n            console.log(\"All images were fetched.\");\n        } else {\n            console.log(failCount.toString() + \"/\" + unfetchedURLs.length.toString() + \" images failed to prefetch\");\n        }\n  })\n}\n\nexport const formatText = (string: string) => {\n  // Replace newline characters with actual newlines\n  return string.replace(/\\\\n/g, \"\\n\")\n}\n\nexport const currency = \"$\";\n\nexport const regionCodes = {\n  \"Ontario\": \"ON\",\n  \"Quebec\": \"QC\",\n  \"British Columbia\": \"BC\",\n  \"Alberta\": \"AB\",\n  \"Manitoba\": \"MB\",\n  \"Saskatchewan\": \"SK\",\n  \"Nova Scotia\": \"NS\",\n  \"New Brunswick\": \"NB\",\n  \"Newfoundland and Labrador\": \"NL\",\n  \"Prince Edward Island\": \"PE\",\n  \"Northwest Territories\": \"NT\",\n  \"Nunavut\": \"NU\",\n  \"Yukon\": \"YT\"\n}\n\nconst product: ProductData = {\n  \"businessID\": \"eCHvdt5OwSpxphawLMaW\",\n  \"category\": \"Coffee\",\n  \"name\": \"Coffee\",\n  \"description\": \"A freshly brewed coffee that you can enjoy throughout the day. In 2008 our master blenders and roasters created this for you — a smooth, well-rounded blend of Latin American coffees with subtly rich flavors of chocolate and toasted nuts, it’s served fresh every day.\",\n  \"price\": 2.99,\n  \"images\": [\n    \"https://upload.wikimedia.org/wikipedia/commons/4/45/A_small_cup_of_coffee.JPG\",\n    \"https://post.healthline.com/wp-content/uploads/2020/08/ways-to-make-coffee-super-healthy-1200x628-facebook-1200x628.jpg\",\n    \"https://loseitblog.com/wp-content/uploads/2019/01/Coffee-Islamorada-.png\",\n    \"https://cdn.cancercenter.com/-/media/ctca/images/others/blogs/2019/01-january/01-blog-coffee-l.jpg\"\n  ],\n  \"optionTypes\": [\n    {\n      \"name\": \"Size\",\n      \"options\": [{\n          \"name\": \"Small\",\n          \"priceChange\": -1,\n          \"image\": \"\"\n        }, {\n          \"name\": \"Medium\",\n          \"priceChange\": 0,\n          \"image\": \"\"\n        }, {\n          \"name\": \"Large\",\n          \"priceChange\": 1,\n          \"image\": \"\"\n        }]\n    }, {\n      \"name\": \"Roast\",\n      \"options\": [{\n          \"name\": \"Light\",\n          \"priceChange\": 0,\n          \"image\": \"\"\n        }, {\n          \"name\": \"Medium\",\n          \"priceChange\": 0,\n          \"image\": \"\"\n        }, {\n          \"name\": \"Dark\",\n          \"priceChange\": 0,\n          \"image\": \"\"\n        }]\n    }\n  ],\n  \"ratings\": [17,3,56,117,83],\n  \"extraInfo\": \"May contain milk.\"\n}\n\n//addProduct(product, \"eCHvdt5OwSpxphawLMaW\")"]},"metadata":{},"sourceType":"module"}