{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/ericblois/Development/React Native/typescript-project/app/CustomerMainScreen.tsx\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport { SearchPage, FavouritesPage, NotificationsPage, AccountPage } from \"./HelperFiles/PageIndex\";\nimport { defaults, icons } from \"./HelperFiles/StyleSheet\";\nimport { CustomerMainTab } from \"./HelperFiles/Navigation\";\nimport TabIcon from \"./CustomComponents/TabIcon\";\n\nvar CustomerMainScreen = function (_Component) {\n  _inherits(CustomerMainScreen, _Component);\n\n  var _super = _createSuper(CustomerMainScreen);\n\n  function CustomerMainScreen() {\n    var _this;\n\n    _classCallCheck(this, CustomerMainScreen);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {};\n    return _this;\n  }\n\n  _createClass(CustomerMainScreen, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(CustomerMainTab.Navigator, {\n        tabBarOptions: {\n          style: defaults.tabBar,\n          showLabel: false\n        },\n        sceneContainerStyle: defaults.screenContainer,\n        initialRouteName: \"search\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 9\n        }\n      }, React.createElement(CustomerMainTab.Screen, {\n        name: \"search\",\n        component: SearchPage,\n        options: {\n          tabBarIcon: function tabBarIcon(options) {\n            return React.createElement(TabIcon, {\n              iconSource: icons.search,\n              options: options,\n              __self: _this2,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 42,\n                columnNumber: 44\n              }\n            });\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }\n      }), React.createElement(CustomerMainTab.Screen, {\n        name: \"fav\",\n        component: FavouritesPage,\n        options: {\n          tabBarIcon: function tabBarIcon(options) {\n            return React.createElement(TabIcon, {\n              iconSource: icons.star,\n              options: options,\n              __self: _this2,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 49,\n                columnNumber: 44\n              }\n            });\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }\n      }), React.createElement(CustomerMainTab.Screen, {\n        name: \"notif\",\n        component: NotificationsPage,\n        options: {\n          tabBarIcon: function tabBarIcon(options) {\n            return React.createElement(TabIcon, {\n              iconSource: icons.lines,\n              options: options,\n              __self: _this2,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 44\n              }\n            });\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }\n      }), React.createElement(CustomerMainTab.Screen, {\n        name: \"account\",\n        component: AccountPage,\n        options: {\n          tabBarIcon: function tabBarIcon(options) {\n            return React.createElement(TabIcon, {\n              iconSource: icons.profile,\n              options: options,\n              __self: _this2,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 44\n              }\n            });\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }\n      }));\n    }\n  }]);\n\n  return CustomerMainScreen;\n}(Component);\n\nexport { CustomerMainScreen as default };","map":{"version":3,"sources":["/Users/ericblois/Development/React Native/typescript-project/app/CustomerMainScreen.tsx"],"names":["React","Component","SearchPage","FavouritesPage","NotificationsPage","AccountPage","defaults","icons","CustomerMainTab","TabIcon","CustomerMainScreen","state","style","tabBar","showLabel","screenContainer","tabBarIcon","options","search","star","lines","profile"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,SAASC,UAAT,EAAqBC,cAArB,EAAqCC,iBAArC,EAAwDC,WAAxD;AAEA,SAASC,QAAT,EAAmBC,KAAnB;AACA,SAASC,eAAT;AACA,OAAOC,OAAP;;IAiBqBC,kB;;;;;;;;;;;;;;;UAEnBC,K,GAAyB,E;;;;;;6BAEhB;AAAA;;AACP,aACI,oBAAC,eAAD,CAAiB,SAAjB;AACI,QAAA,aAAa,EAAE;AACbC,UAAAA,KAAK,EAAEN,QAAQ,CAACO,MADH;AAEbC,UAAAA,SAAS,EAAE;AAFE,SADnB;AAKI,QAAA,mBAAmB,EAAER,QAAQ,CAACS,eALlC;AAMI,QAAA,gBAAgB,EAAE,QANtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAQI,oBAAC,eAAD,CAAiB,MAAjB;AACI,QAAA,IAAI,EAAE,QADV;AAEI,QAAA,SAAS,EAAEb,UAFf;AAGI,QAAA,OAAO,EAAE;AACPc,UAAAA,UAAU,EAAE,oBAACC,OAAD;AAAA,mBAAa,oBAAC,OAAD;AAAS,cAAA,UAAU,EAAEV,KAAK,CAACW,MAA3B;AAAmC,cAAA,OAAO,EAAED,OAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAb;AAAA;AADL,SAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QARJ,EAeI,oBAAC,eAAD,CAAiB,MAAjB;AACI,QAAA,IAAI,EAAE,KADV;AAEI,QAAA,SAAS,EAAEd,cAFf;AAGI,QAAA,OAAO,EAAE;AACPa,UAAAA,UAAU,EAAE,oBAACC,OAAD;AAAA,mBAAa,oBAAC,OAAD;AAAS,cAAA,UAAU,EAAEV,KAAK,CAACY,IAA3B;AAAiC,cAAA,OAAO,EAAEF,OAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAb;AAAA;AADL,SAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAfJ,EAsBI,oBAAC,eAAD,CAAiB,MAAjB;AACI,QAAA,IAAI,EAAE,OADV;AAEI,QAAA,SAAS,EAAEb,iBAFf;AAGI,QAAA,OAAO,EAAE;AACPY,UAAAA,UAAU,EAAE,oBAACC,OAAD;AAAA,mBAAa,oBAAC,OAAD;AAAS,cAAA,UAAU,EAAEV,KAAK,CAACa,KAA3B;AAAkC,cAAA,OAAO,EAAEH,OAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAb;AAAA;AADL,SAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAtBJ,EA6BI,oBAAC,eAAD,CAAiB,MAAjB;AACI,QAAA,IAAI,EAAE,SADV;AAEI,QAAA,SAAS,EAAEZ,WAFf;AAGI,QAAA,OAAO,EAAE;AACPW,UAAAA,UAAU,EAAE,oBAACC,OAAD;AAAA,mBAAa,oBAAC,OAAD;AAAS,cAAA,UAAU,EAAEV,KAAK,CAACc,OAA3B;AAAoC,cAAA,OAAO,EAAEJ,OAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAb;AAAA;AADL,SAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QA7BJ,CADJ;AAuCD;;;;EA5C6ChB,S;;SAA3BS,kB","sourcesContent":["import React, { Component } from \"react\";\nimport { StyleSheet, StatusBar, AppState, ActivityIndicator, View } from \"react-native\";\nimport { SearchPage, FavouritesPage, NotificationsPage, AccountPage, ProductShopScreen } from \"./HelperFiles/PageIndex\";\nimport BusinessShopScreen from \"./BusinessShopScreen\"\nimport { defaults, icons } from \"./HelperFiles/StyleSheet\";\nimport { CustomerMainTab } from \"./HelperFiles/Navigation\";\nimport TabIcon from \"./CustomComponents/TabIcon\";\nimport { StackNavigationProp } from '@react-navigation/stack';\nimport { RootStackParamList } from \"./HelperFiles/Navigation\";\nimport { RouteProp } from '@react-navigation/native';\n\ntype CustomerMainNavigationProp = StackNavigationProp<RootStackParamList, \"customerMain\">;\n\ntype CustomerMainRouteProp = RouteProp<RootStackParamList, \"customerMain\">;\n\ntype Props = {\n    navigation: CustomerMainNavigationProp,\n    route: CustomerMainRouteProp\n}\n\ntype State = {\n}\n\nexport default class CustomerMainScreen extends Component<Props, State> {\n\n  state: Readonly<State> = {};\n\n  render() {\n    return (\n        <CustomerMainTab.Navigator\n            tabBarOptions={{\n              style: defaults.tabBar,\n              showLabel: false,\n            }}\n            sceneContainerStyle={defaults.screenContainer}\n            initialRouteName={\"search\"}\n        >\n            <CustomerMainTab.Screen\n                name={\"search\"}\n                component={SearchPage}\n                options={{\n                  tabBarIcon: (options) => <TabIcon iconSource={icons.search} options={options}/>\n                }}\n            />\n            <CustomerMainTab.Screen\n                name={\"fav\"} \n                component={FavouritesPage}\n                options={{\n                  tabBarIcon: (options) => <TabIcon iconSource={icons.star} options={options}/>\n                }}\n            />\n            <CustomerMainTab.Screen\n                name={\"notif\"} \n                component={NotificationsPage}\n                options={{\n                  tabBarIcon: (options) => <TabIcon iconSource={icons.lines} options={options}/>\n                }}\n            />\n            <CustomerMainTab.Screen\n                name={\"account\"}\n                component={AccountPage}\n                options={{\n                  tabBarIcon: (options) => <TabIcon iconSource={icons.profile} options={options}/>\n                }}\n            />\n        </CustomerMainTab.Navigator>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}