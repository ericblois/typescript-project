{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/ericblois/Development/React Native/typescript-project/app/CustomComponents/IconButton.tsx\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { defaults } from \"../HelperFiles/StyleSheet\";\n\nvar IconButton = function (_Component) {\n  _inherits(IconButton, _Component);\n\n  var _super = _createSuper(IconButton);\n\n  function IconButton() {\n    _classCallCheck(this, IconButton);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(IconButton, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(TouchableOpacity, _extends({}, this.props.buttonProps, {\n        style: [defaults.iconButton, this.props.buttonStyle],\n        onPress: this.props.buttonFunc,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 9\n        }\n      }), React.createElement(Image, _extends({}, this.props.iconProps, {\n        style: [defaults.iconImage, this.props.iconStyle],\n        resizeMethod: \"scale\",\n        resizeMode: \"contain\",\n        source: this.props.iconSource,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 9\n        }\n      })));\n    }\n  }], [{\n    key: \"createButtons\",\n    value: function createButtons(buttonData) {\n      var _this = this;\n\n      var buttons = buttonData.map(function (button, index) {\n        return React.createElement(IconButton, {\n          iconSource: button.iconSource,\n          buttonFunc: button.buttonFunc,\n          key: index,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 14\n          }\n        });\n      });\n      return buttons;\n    }\n  }]);\n\n  return IconButton;\n}(Component);\n\nexport { IconButton as default };","map":{"version":3,"sources":["/Users/ericblois/Development/React Native/typescript-project/app/CustomComponents/IconButton.tsx"],"names":["React","Component","defaults","IconButton","props","buttonProps","iconButton","buttonStyle","buttonFunc","iconProps","iconImage","iconStyle","iconSource","buttonData","buttons","map","button","index"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;AAEA,SAASC,QAAT;;IAeqBC,U;;;;;;;;;;;;;6BASV;AACP,aACI,oBAAC,gBAAD,eACI,KAAKC,KAAL,CAAWC,WADf;AAEA,QAAA,KAAK,EAAE,CAACH,QAAQ,CAACI,UAAV,EAAsB,KAAKF,KAAL,CAAWG,WAAjC,CAFP;AAGA,QAAA,OAAO,EAAE,KAAKH,KAAL,CAAWI,UAHpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAKA,oBAAC,KAAD,eACM,KAAKJ,KAAL,CAAWK,SADjB;AAEE,QAAA,KAAK,EAAE,CAACP,QAAQ,CAACQ,SAAV,EAAqB,KAAKN,KAAL,CAAWO,SAAhC,CAFT;AAGE,QAAA,YAAY,EAAE,OAHhB;AAIE,QAAA,UAAU,EAAE,SAJd;AAKE,QAAA,MAAM,EAAE,KAAKP,KAAL,CAAWQ,UALrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SALA,CADJ;AAeD;;;kCAvBoBC,U,EAA+B;AAAA;;AAClD,UAAMC,OAAO,GAAGD,UAAU,CAACE,GAAX,CAAe,UAACC,MAAD,EAASC,KAAT,EAAmB;AAChD,eAAO,oBAAC,UAAD;AAAY,UAAA,UAAU,EAAED,MAAM,CAACJ,UAA/B;AAA2C,UAAA,UAAU,EAAEI,MAAM,CAACR,UAA9D;AAA0E,UAAA,GAAG,EAAES,KAA/E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,OAFe,CAAhB;AAGA,aAAOH,OAAP;AACD;;;;EAPqCb,S;;SAAnBE,U","sourcesContent":["import React, { Component } from \"react\";\nimport { TouchableOpacity, Image, StyleSheet, ViewStyle, GestureResponderEvent, ImageStyle } from \"react-native\";\nimport { defaults, styleValues } from \"../HelperFiles/StyleSheet\";\nimport PropTypes from 'prop-types';\nimport { Icon } from \"react-native-elements\";\n\ntype IconButtonProps = {\n  iconSource: number,\n  iconStyle?: ImageStyle,\n  buttonStyle?: ViewStyle,\n  buttonFunc?: (event?: GestureResponderEvent) => void\n  buttonProps?: TouchableOpacity['props']\n  iconProps?: Image['props']\n}\n\ntype State = {}\n\nexport default class IconButton extends Component<IconButtonProps, State> {\n\n  static createButtons(buttonData: IconButtonProps[]) {\n    const buttons = buttonData.map((button, index) => {\n      return <IconButton iconSource={button.iconSource} buttonFunc={button.buttonFunc} key={index}/>;\n    })\n    return buttons;\n  }\n\n  render() {\n    return (\n        <TouchableOpacity\n        {...this.props.buttonProps}\n        style={[defaults.iconButton, this.props.buttonStyle]}\n        onPress={this.props.buttonFunc}\n      >\n        <Image\n          {...this.props.iconProps}\n          style={[defaults.iconImage, this.props.iconStyle]}\n          resizeMethod={\"scale\"}\n          resizeMode={\"contain\"}\n          source={this.props.iconSource}\n        />\n      </TouchableOpacity>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}