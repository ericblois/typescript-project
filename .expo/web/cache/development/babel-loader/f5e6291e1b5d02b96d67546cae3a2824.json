{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/ericblois/Development/React Native/typescript-project/app/ProductShopScreen.tsx\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport PropTypes from 'prop-types';\nimport { styleValues, defaults, icons } from \"./HelperFiles/StyleSheet\";\nimport { PhotoSlider, RatingVisual, MenuBar } from \"./HelperFiles/CompIndex\";\nimport { formatText, prefetchImages } from \"./HelperFiles/Constants\";\nimport DropDownPicker from 'react-native-dropdown-picker';\n\nvar ProductShopScreen = function (_Component) {\n  _inherits(ProductShopScreen, _Component);\n\n  var _super = _createSuper(ProductShopScreen);\n\n  function ProductShopScreen() {\n    var _this;\n\n    _classCallCheck(this, ProductShopScreen);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _this.galleryResponse = function () {\n      _this.setState({\n        galleryReady: true\n      });\n    };\n\n    _this.productData = _this.props.route.params.productData;\n    _this.productType = _this.props.route.params.productType;\n    _this.dropdownItems = {};\n    _this.state = {\n      imagesFetched: false,\n      galleryReady: false,\n      options: {}\n    };\n    return _this;\n  }\n\n  _createClass(ProductShopScreen, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      prefetchImages(this.productData.images).then(function () {\n        _this2.setState({\n          imagesFetched: true\n        });\n      });\n      this.dropdownItems = this.createOptionDropdowns();\n    }\n  }, {\n    key: \"displayLoadingScreen\",\n    value: function displayLoadingScreen() {\n      if (this.productData.images.length != 0 && !(this.state.imagesFetched && this.state.galleryReady)) {\n        return React.createElement(ActivityIndicator, {\n          style: styles.loadingScreen,\n          size: \"large\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 17\n          }\n        });\n      }\n\n      return React.createElement(React.Fragment, null);\n    }\n  }, {\n    key: \"createOptionDropdowns\",\n    value: function createOptionDropdowns() {\n      var dropdownItems = {};\n      this.productData.optionTypes.forEach(function (optionType, index) {\n        var items = optionType.options.map(function (option) {\n          return {\n            label: option.name,\n            value: option.name\n          };\n        });\n        dropdownItems[optionType.name] = items;\n      });\n      return dropdownItems;\n    }\n  }, {\n    key: \"renderDropdowns\",\n    value: function renderDropdowns() {\n      var _this3 = this;\n\n      var dropdowns = [];\n\n      var _loop = function _loop(name) {\n        var dropdown = React.createElement(DropDownPicker, {\n          key: name,\n          containerStyle: [styles.optionPickerContainer, {\n            borderColor: _this3.state.options[name] ? styleValues.validColor : styleValues.invalidColor\n          }],\n          style: styles.optionPicker,\n          items: _this3.dropdownItems[name],\n          placeholder: name,\n          onChangeItem: function onChangeItem(item) {\n            var options = _this3.state.options;\n            options[name] = item.value;\n\n            _this3.setState({\n              options: options\n            });\n          },\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 30\n          }\n        });\n        dropdowns.push(dropdown);\n      };\n\n      for (var name in this.dropdownItems) {\n        _loop(name);\n      }\n\n      return dropdowns;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      return React.createElement(View, {\n        style: defaults.screenContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 9\n        }\n      }, React.createElement(View, {\n        style: defaults.pageContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }\n      }, React.createElement(ScrollView, {\n        contentContainerStyle: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }\n      }, React.createElement(PhotoSlider, {\n        imgURLs: this.productData.images,\n        loadResponse: this.galleryResponse,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 17\n        }\n      }), React.createElement(View, {\n        style: styles.descriptionHeader,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 17\n        }\n      }, React.createElement(Text, {\n        style: styles.productTitle,\n        numberOfLines: 2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 21\n        }\n      }, this.productData.name), React.createElement(View, {\n        style: styles.subHeader,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 21\n        }\n      }, React.createElement(Text, {\n        style: styles.productType,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 25\n        }\n      }, this.productType), React.createElement(RatingVisual, {\n        rating: 4,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 25\n        }\n      }))), React.createElement(View, {\n        style: styles.descriptionBody,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 17\n        }\n      }, React.createElement(Text, {\n        style: styles.description,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 21\n        }\n      }, formatText(this.productData.description))), React.createElement(View, {\n        style: styles.descriptionBody,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 17\n        }\n      }, this.renderDropdowns()), React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 17\n        }\n      }, this.productData.extraInfo), this.displayLoadingScreen()), React.createElement(MenuBar, {\n        menuBarStyle: {\n          justifyContent: \"space-between\"\n        },\n        buttons: [{\n          iconSource: icons.backArrow,\n          buttonFunc: function buttonFunc() {\n            return _this4.props.navigation.goBack();\n          }\n        }, {\n          iconSource: icons.shoppingCart,\n          buttonFunc: function buttonFunc() {}\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 13\n        }\n      })));\n    }\n  }]);\n\n  return ProductShopScreen;\n}(Component);\n\nProductShopScreen.propTypes = {\n  navigation: PropTypes.object,\n  route: PropTypes.object\n};\nexport { ProductShopScreen as default };\nvar styles = StyleSheet.create({\n  container: {\n    paddingBottom: styleValues.winWidth / 4,\n    justifyContent: \"flex-start\",\n    alignItems: \"center\",\n    marginTop: styleValues.mediumPadding\n  },\n  loadingScreen: {\n    position: \"absolute\",\n    top: 0,\n    backgroundColor: \"#fff\",\n    width: \"100%\",\n    height: \"100%\"\n  },\n  descriptionHeader: {\n    width: styleValues.winWidth - styleValues.mediumPadding * 2,\n    alignItems: \"flex-start\",\n    padding: styleValues.minorPadding,\n    paddingBottom: styleValues.mediumPadding,\n    marginBottom: styleValues.mediumPadding,\n    borderBottomWidth: styleValues.minorBorderWidth,\n    borderColor: styleValues.bordColor\n  },\n  subHeader: {\n    width: \"100%\",\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\"\n  },\n  descriptionBody: {\n    width: styleValues.winWidth - styleValues.mediumPadding * 2,\n    alignItems: \"flex-start\",\n    padding: styleValues.minorPadding,\n    paddingBottom: styleValues.mediumPadding,\n    marginBottom: styleValues.mediumPadding,\n    borderBottomWidth: styleValues.minorBorderWidth,\n    borderColor: styleValues.bordColor\n  },\n  productTitle: {\n    fontSize: styleValues.largestTextSize,\n    color: styleValues.majorTextColor\n  },\n  productType: {\n    fontSize: styleValues.smallTextSize,\n    color: styleValues.minorTextColor\n  },\n  description: {\n    fontSize: styleValues.smallTextSize\n  },\n  optionPickerContainer: {\n    width: styleValues.winWidth - 2 * styleValues.mediumPadding,\n    height: styleValues.winWidth / 8,\n    fontSize: styleValues.smallestTextSize,\n    backgroundColor: \"#fff\",\n    borderWidth: 2,\n    borderRadius: styleValues.mediumPadding,\n    marginBottom: styleValues.mediumPadding\n  },\n  optionPicker: {\n    borderTopLeftRadius: styleValues.mediumPadding,\n    borderTopRightRadius: styleValues.mediumPadding,\n    borderBottomLeftRadius: styleValues.mediumPadding,\n    borderBottomRightRadius: styleValues.mediumPadding,\n    borderWidth: 0,\n    height: \"100%\",\n    width: \"100%\"\n  }\n});","map":{"version":3,"sources":["/Users/ericblois/Development/React Native/typescript-project/app/ProductShopScreen.tsx"],"names":["React","Component","PropTypes","styleValues","defaults","icons","PhotoSlider","RatingVisual","MenuBar","formatText","prefetchImages","DropDownPicker","ProductShopScreen","galleryResponse","setState","galleryReady","productData","props","route","params","productType","dropdownItems","state","imagesFetched","options","images","then","createOptionDropdowns","length","styles","loadingScreen","optionTypes","forEach","optionType","index","items","map","option","label","name","value","dropdowns","dropdown","optionPickerContainer","borderColor","validColor","invalidColor","optionPicker","item","push","screenContainer","pageContainer","container","descriptionHeader","productTitle","subHeader","descriptionBody","description","renderDropdowns","extraInfo","displayLoadingScreen","justifyContent","iconSource","backArrow","buttonFunc","navigation","goBack","shoppingCart","propTypes","object","StyleSheet","create","paddingBottom","winWidth","alignItems","marginTop","mediumPadding","position","top","backgroundColor","width","height","padding","minorPadding","marginBottom","borderBottomWidth","minorBorderWidth","bordColor","flexDirection","fontSize","largestTextSize","color","majorTextColor","smallTextSize","minorTextColor","smallestTextSize","borderWidth","borderRadius","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { View, Image, Text, StyleSheet, ActivityIndicator, ScrollView, SafeAreaView } from \"react-native\";\n\nimport PropTypes from 'prop-types';\nimport { styleValues, defaults, icons } from \"./HelperFiles/StyleSheet\";\nimport { PhotoSlider, RatingVisual, MenuBar, IconButton } from \"./HelperFiles/CompIndex\";\nimport { productPropType, formatText, prefetchImages, currency } from \"./HelperFiles/Constants\";\nimport { Picker } from \"@react-native-picker/picker\";\nimport DropDownPicker from 'react-native-dropdown-picker';\nimport { StackNavigationProp } from '@react-navigation/stack';\nimport { RootStackParamList } from \"./HelperFiles/Navigation\";\nimport { RouteProp } from '@react-navigation/native';\n\ntype ProductShopNavigationProp = StackNavigationProp<RootStackParamList, \"productShop\">;\n\ntype ProductShopRouteProp = RouteProp<RootStackParamList, \"productShop\">;\n\ntype Props = {\n    navigation: ProductShopNavigationProp,\n    route: ProductShopRouteProp\n}\n\ntype State = {\n    imagesFetched: boolean,\n    galleryReady: boolean,\n    options: { [key: string]: string }\n}\n\nexport default class ProductShopScreen extends Component<Props, State> {\n\n    galleryResponse = () => {\n        this.setState({galleryReady: true});\n    }\n    productData = this.props.route.params.productData;\n    productType = this.props.route.params.productType;\n    dropdownItems: {[key: string]: {label: string, value: string}[]} = {};\n\n    state: Readonly<State> = {\n        imagesFetched: false,\n        galleryReady: false,\n        options: {},\n    }\n\n    static propTypes = {\n        navigation: PropTypes.object,\n        route: PropTypes.object,\n    }\n\n    componentDidMount() {\n        prefetchImages(this.productData.images).then(() => {\n            this.setState({imagesFetched: true});\n        })\n        // Create elements for each of this product's options\n        this.dropdownItems = this.createOptionDropdowns();\n    }\n\n    displayLoadingScreen() {\n        if (this.productData.images.length != 0 && !(this.state.imagesFetched && this.state.galleryReady)) {\n            return (\n                <ActivityIndicator style={styles.loadingScreen} size={\"large\"}/>\n            );\n        }\n        return <></>\n    }\n    // Create dropdown elements for each type of option for this product\n    createOptionDropdowns() {\n        let dropdownItems: { [key: string]: {label: string, value: string}[] } = {};\n        // Create a dropdown for each option type of product\n        this.productData.optionTypes.forEach((optionType, index) => {\n            // Create item list for dropdown\n            const items = optionType.options.map((option) => {\n                return {label: option.name, value: option.name}\n            });\n            dropdownItems[optionType.name] = items;\n        })\n        return dropdownItems;\n    }\n\n    renderDropdowns() {\n        const dropdowns = [];\n        for (const name in this.dropdownItems) {\n            const dropdown = <DropDownPicker\n                key={name}\n                containerStyle={[styles.optionPickerContainer, {borderColor: this.state.options[name] ? styleValues.validColor : styleValues.invalidColor}]}\n                style={styles.optionPicker}\n                items={this.dropdownItems[name]}\n                placeholder={name}\n                onChangeItem={(item) => {\n                    const options = this.state.options;\n                    options[name] = item.value;\n                    this.setState({options: options});\n                }}\n            />\n            dropdowns.push(dropdown);\n        }\n        return dropdowns;\n    }\n\n    render() {\n        return (\n        <View style={defaults.screenContainer}>\n            <View style={defaults.pageContainer}>\n            <ScrollView contentContainerStyle={styles.container}>\n                <PhotoSlider imgURLs={this.productData.images} loadResponse={this.galleryResponse}/>\n                <View style={styles.descriptionHeader}>\n                    <Text style={styles.productTitle} numberOfLines={2}>{this.productData.name}</Text>\n                    <View style={styles.subHeader}>\n                        <Text style={styles.productType}>{this.productType}</Text>\n                        <RatingVisual rating={4}/>\n                    </View>\n                </View>\n                <View style={styles.descriptionBody}>\n                    <Text style={styles.description}>{formatText(this.productData.description)}</Text>\n                </View>\n                <View style={styles.descriptionBody}>\n                    {this.renderDropdowns()}\n                </View>\n                <Text>{this.productData.extraInfo}</Text>\n                {this.displayLoadingScreen()}\n            </ScrollView>\n            <MenuBar \n            menuBarStyle={{justifyContent: \"space-between\"}}\n            buttons={[\n                {iconSource: icons.backArrow, buttonFunc: () => this.props.navigation.goBack()},\n                {iconSource: icons.shoppingCart, buttonFunc: () => {}},\n            ]}/>\n            </View>\n        </View>\n        )\n    }\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        paddingBottom: styleValues.winWidth/4,\n        justifyContent: \"flex-start\",\n        alignItems: \"center\",\n        marginTop: styleValues.mediumPadding,\n    },\n    loadingScreen: {\n        position: \"absolute\",\n        top: 0,\n        backgroundColor: \"#fff\",\n        width: \"100%\",\n        height: \"100%\",\n    },\n    descriptionHeader: {\n        width: styleValues.winWidth - styleValues.mediumPadding*2,\n        alignItems: \"flex-start\",\n        padding: styleValues.minorPadding,\n        paddingBottom: styleValues.mediumPadding,\n        marginBottom: styleValues.mediumPadding,\n        borderBottomWidth: styleValues.minorBorderWidth,\n        borderColor: styleValues.bordColor\n    },\n    subHeader: {\n        width: \"100%\",\n        flexDirection: \"row\",\n        justifyContent: \"space-between\",\n        alignItems: \"center\"\n    },\n    descriptionBody: {\n        width: styleValues.winWidth - styleValues.mediumPadding*2,\n        alignItems: \"flex-start\",\n        padding: styleValues.minorPadding,\n        paddingBottom: styleValues.mediumPadding,\n        marginBottom: styleValues.mediumPadding,\n        borderBottomWidth: styleValues.minorBorderWidth,\n        borderColor: styleValues.bordColor\n    },\n    productTitle: {\n        fontSize: styleValues.largestTextSize,\n        color: styleValues.majorTextColor,\n    },\n    productType: {\n        fontSize: styleValues.smallTextSize,\n        color: styleValues.minorTextColor,\n    },\n    description: {\n        fontSize: styleValues.smallTextSize,\n    },\n    optionPickerContainer: {\n        width: styleValues.winWidth-2*styleValues.mediumPadding,\n        height: styleValues.winWidth/8,\n        fontSize: styleValues.smallestTextSize,\n        backgroundColor: \"#fff\",\n        borderWidth: 2,\n        borderRadius: styleValues.mediumPadding,\n        marginBottom: styleValues.mediumPadding,\n    },\n    optionPicker: {\n        // Must use individual border radii, as borderRadius does not work\n        borderTopLeftRadius: styleValues.mediumPadding,\n        borderTopRightRadius: styleValues.mediumPadding,\n        borderBottomLeftRadius: styleValues.mediumPadding,\n        borderBottomRightRadius: styleValues.mediumPadding,\n        borderWidth: 0,\n        height: \"100%\",\n        width: \"100%\",\n    }\n});\n"]},"metadata":{},"sourceType":"module"}